<!--
 ! Licensed to the Apache Software Foundation (ASF) under one
 ! or more contributor license agreements.  See the NOTICE file
 ! distributed with this work for additional information
 ! regarding copyright ownership.  The ASF licenses this file
 ! to you under the Apache License, Version 2.0 (the
 ! "License"); you may not use this file except in compliance
 ! with the License.  You may obtain a copy of the License at
 !
 !   http://www.apache.org/licenses/LICENSE-2.0
 !
 ! Unless required by applicable law or agreed to in writing,
 ! software distributed under the License is distributed on an
 ! "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ! KIND, either express or implied.  See the License for the
 ! specific language governing permissions and limitations
 ! under the License.
 !-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>apache-asterixdb</artifactId>
        <groupId>org.apache.asterix</groupId>
        <version>0.9.10-SNAPSHOT</version>
    </parent>
    <artifactId>asterix-cloud</artifactId>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <properties>
        <root.dir>${basedir}/..</root.dir>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.rat</groupId>
                <artifactId>apache-rat-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <licenses>
                                <license implementation="org.apache.rat.analysis.license.ApacheSoftwareLicense20"/>
                            </licenses>
                            <excludes combine.children="append">
                                <exclude>src/test/resources/result/**</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.4.2</version>
                <executions>
                    <execution>
                        <id>install-fake-gcs</id>
                        <phase>${gcs.download.stage}</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>
                                https://github.com/fsouza/fake-gcs-server/releases/download/v1.48.0/fake-gcs-server_1.48.0_Linux_amd64.tar.gz
                            </url>
                            <outputFileName>fake-gcs-server_1.48.0_Linux_amd64.tar.gz</outputFileName>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>extract-gcs</id>
                        <phase>${gcs.install.stage}</phase>
                        <configuration>
                            <target>
                                <echo message="Extracting fake-gcs-server"/>
                                <mkdir dir="${project.build.directory}/fake-gcs-server"/>
                                <gunzip src="${project.build.directory}/fake-gcs-server_1.48.0_Linux_amd64.tar.gz"
                                        dest="${project.build.directory}/fake-gcs-server_1.48.0_Linux_amd64.tar"/>
                                <untar src="${project.build.directory}/fake-gcs-server_1.48.0_Linux_amd64.tar"
                                       dest="${project.build.directory}/fake-gcs-server"/>
                                <chmod file="${project.build.directory}/fake-gcs-server/fake-gcs-server" perm="ugo+rx"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>fake-gcs-server</id>
                        <phase>${gcs.stage}</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.build.directory}/fake-gcs-server/fake-gcs-server</executable>
                            <workingDirectory>${project.build.directory}/fake-gcs-server</workingDirectory>
                            <arguments>
                                <argument>-port</argument>
                                <argument>24443</argument>
                                <argument>-scheme</argument>
                                <argument>http</argument>
                                <argument>-host</argument>
                                <argument>127.0.0.1</argument>
                                <argument>-log-level</argument>
                                <argument>error</argument>
                                <argument>-filesystem-root</argument>
                                <argument>${project.build.directory}/fake-gcs-server/storage</argument>
                            </arguments>
                            <async>true</async>
                        </configuration>
                    </execution>
                    <execution>
                        <id>azurite</id>
                        <phase>${azurite.stage}</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <!--suppress UnresolvedMavenProperty -->
                            <executable>${project.build.directory}/npm/node_modules/.bin/azurite-blob</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <environmentVariables>
                                <PATH>${project.build.directory}/npm/node</PATH>
                            </environmentVariables>
                            <arguments>
                                <argument>--blobPort</argument>
                                <argument>15055</argument>
                                <argument>--location</argument>
                                <argument>${project.build.directory}/azurite</argument>
                                <argument>--debug</argument>
                                <argument>${project.build.directory}/azurite/logs/azurite-debug.log</argument>
                            </arguments>
                            <async>true</async>
                            <outputFile>${project.build.directory}/azurite/logs/azurite.log</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>azurite-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>1.13.4</version>
                        <configuration>
                            <nodeVersion>v14.15.4</nodeVersion>
                            <npmVersion>6.14.11</npmVersion>
                            <workingDirectory>target/npm</workingDirectory>
                            <installDirectory>target/npm</installDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>install node and yarn</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <phase>${azurite.npm.install.stage}</phase>
                            </execution>
                            <execution>
                                <id>azurite blob</id>
                                <phase>${azurite.install.stage}</phase>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>install azurite@3.31.0</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.apache.hyracks</groupId>
            <artifactId>hyracks-cloud</artifactId>
            <version>${hyracks.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.asterix</groupId>
            <artifactId>asterix-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.asterix</groupId>
            <artifactId>asterix-external-data</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- aws s3 start -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>sdk-core</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>regions</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>auth</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3-transfer-manager</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk.crt</groupId>
            <artifactId>aws-crt</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>apache-client</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>netty-nio-client</artifactId>
            <version>${awsjavasdk.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.findify</groupId>
            <artifactId>s3mock_2.12</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http-core_2.12</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- aws s3 end -->

        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-storage-blob-batch</artifactId>
            <version>12.23.0</version>
        </dependency>

    </dependencies>
</project>
