distribute result [$$68] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    assign [$$68] <- [{"text": $$text, "$1": $$71}] project: [$$68] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
    -- ASSIGN  |PARTITIONED|
      exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
        group by ([$$text := $$78]) decor ([]) {
                  aggregate [$$71] <- [agg-global-sql-sum($$77)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                  -- AGGREGATE  |LOCAL|
                    nested tuple source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                    -- NESTED_TUPLE_SOURCE  |LOCAL|
               } [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
        -- SORT_GROUP_BY[$$78]  |PARTITIONED|
          exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
          -- HASH_PARTITION_EXCHANGE [$$78]  |PARTITIONED|
            group by ([$$78 := $$70]) decor ([]) {
                      aggregate [$$77] <- [agg-local-sql-sum(sql-sum($$74))] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                      -- AGGREGATE  |LOCAL|
                        nested tuple source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                        -- NESTED_TUPLE_SOURCE  |LOCAL|
                   } [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
            -- SORT_GROUP_BY[$$70]  |PARTITIONED|
              exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                select (eq(lowercase($$70), "string")) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                -- STREAM_SELECT  |PARTITIONED|
                  assign [$$74, $$70] <- [$$ht.getField("indices"), $$ht.getField("text")] project: [$$74, $$70] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                  -- ASSIGN  |PARTITIONED|
                    unnest $$ht <- scan-collection($$73) project: [$$ht] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                    -- UNNEST  |PARTITIONED|
                      assign [$$73] <- [$$p1.getField("entities").getField("hashtags")] project: [$$73] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                      -- ASSIGN  |PARTITIONED|
                        select (gt($$p1.getField("id"), 10)) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                        -- STREAM_SELECT  |PARTITIONED|
                          exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            data-scan []<-[$$p1] <- test.ParquetDataset1 project ({entities:{hashtags:[{indices:any,text:any}]},id:any}) row-group-filter on: gt($$p1.getField("id"), 10) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- DATASOURCE_SCAN  |PARTITIONED|
                              exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
