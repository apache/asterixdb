distribute result [$$65] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    assign [$$65] <- [{"$1": $$66}] project: [$$65] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
    -- ASSIGN  |UNPARTITIONED|
      aggregate [$$66] <- [agg-sql-sum($$75)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
      -- AGGREGATE  |UNPARTITIONED|
        exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
        -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
          aggregate [$$75] <- [agg-sql-count(1)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
          -- AGGREGATE  |PARTITIONED|
            select (or($$53, $$57)) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
            -- STREAM_SELECT  |PARTITIONED|
              project ([$$53, $$57]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
              -- STREAM_PROJECT  |PARTITIONED|
                subplan {
                          aggregate [$$57] <- [non-empty-stream()] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- AGGREGATE  |LOCAL|
                            select (eq($$70, 2)) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- STREAM_SELECT  |LOCAL|
                              assign [$$70] <- [$$e.getField("x")] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                              -- ASSIGN  |LOCAL|
                                unnest $$e <- scan-collection($$67) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                -- UNNEST  |LOCAL|
                                  nested tuple source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                  -- NESTED_TUPLE_SOURCE  |LOCAL|
                       } [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                -- SUBPLAN  |PARTITIONED|
                  subplan {
                            aggregate [$$53] <- [non-empty-stream()] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- AGGREGATE  |LOCAL|
                              select (eq($$68, 1)) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                              -- STREAM_SELECT  |LOCAL|
                                assign [$$68] <- [$$e.getField("x")] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                -- ASSIGN  |LOCAL|
                                  unnest $$e <- scan-collection($$67) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                  -- UNNEST  |LOCAL|
                                    nested tuple source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                    -- NESTED_TUPLE_SOURCE  |LOCAL|
                         } [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                  -- SUBPLAN  |PARTITIONED|
                    assign [$$67] <- [$$p.getField("val1")] project: [$$67] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                    -- ASSIGN  |PARTITIONED|
                      exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        data-scan []<-[$$p] <- test.ParquetDataset1 project ({val1:[{x:any}]}) row-group-filter on: or(eq(scan-collection($$p.getField("val1")).getField("x"), 1), eq(scan-collection($$p.getField("val1")).getField("x"), 2)) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                        -- DATASOURCE_SCAN  |PARTITIONED|
                          exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
