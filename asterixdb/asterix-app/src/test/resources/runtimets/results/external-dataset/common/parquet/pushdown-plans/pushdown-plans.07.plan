distribute result [$$101] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    limit 10 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
    -- STREAM_LIMIT  |UNPARTITIONED|
      assign [$$101] <- [{"uname": $$uname, "cnt": $$103}] project: [$$101] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
      -- ASSIGN  |PARTITIONED|
        exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
        -- SORT_MERGE_EXCHANGE [$$103(DESC) ]  |PARTITIONED|
          limit 10 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
          -- STREAM_LIMIT  |PARTITIONED|
            exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
              order (topK: 10) (DESC, $$103) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
              -- STABLE_SORT [topK: 10] [$$103(DESC)]  |PARTITIONED|
                exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                  group by ([$$uname := $$114]) decor ([]) {
                            aggregate [$$103] <- [agg-sql-sum($$113)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- AGGREGATE  |LOCAL|
                              nested tuple source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                              -- NESTED_TUPLE_SOURCE  |LOCAL|
                         } [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                  -- SORT_GROUP_BY[$$114]  |PARTITIONED|
                    exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                    -- HASH_PARTITION_EXCHANGE [$$114]  |PARTITIONED|
                      group by ([$$114 := $$102]) decor ([]) {
                                aggregate [$$113] <- [agg-sql-count(1)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                -- AGGREGATE  |LOCAL|
                                  nested tuple source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                  -- NESTED_TUPLE_SOURCE  |LOCAL|
                             } [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                      -- SORT_GROUP_BY[$$102]  |PARTITIONED|
                        exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          select ($$92) project: [$$102] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- STREAM_SELECT  |PARTITIONED|
                            project ([$$92, $$102]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- STREAM_PROJECT  |PARTITIONED|
                              exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                group by ([$$112 := $$110]) decor ([$$102]) {
                                          aggregate [$$92] <- [non-empty-stream()] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                          -- AGGREGATE  |LOCAL|
                                            select (not(is-missing($$111))) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                            -- STREAM_SELECT  |LOCAL|
                                              project ([$$111]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                              -- STREAM_PROJECT  |LOCAL|
                                                nested tuple source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                -- NESTED_TUPLE_SOURCE  |LOCAL|
                                       } [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                -- PRE_CLUSTERED_GROUP_BY[$$110]  |PARTITIONED|
                                  exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                    order (ASC, $$110) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                    -- STABLE_SORT [$$110(ASC)]  |PARTITIONED|
                                      exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                      -- HASH_PARTITION_EXCHANGE [$$110]  |PARTITIONED|
                                        project ([$$102, $$111, $$110]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                        -- STREAM_PROJECT  |PARTITIONED|
                                          exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                            left outer join (eq($$104, $$88)) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                            -- HYBRID_HASH_JOIN [$$104][$$88]  |PARTITIONED|
                                              exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                              -- HASH_PARTITION_EXCHANGE [$$104]  |PARTITIONED|
                                                running-aggregate [$$110] <- [create-query-uid()] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                -- RUNNING_AGGREGATE  |PARTITIONED|
                                                  assign [$$104] <- [$$ht1.getField("text")] project: [$$102, $$104] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                  -- ASSIGN  |PARTITIONED|
                                                    unnest $$ht1 <- scan-collection($$105) project: [$$102, $$ht1] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                    -- UNNEST  |PARTITIONED|
                                                      assign [$$105, $$102] <- [$$p1.getField("entities").getField("hashtags"), $$p1.getField("user").getField("name")] project: [$$105, $$102] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                      -- ASSIGN  |PARTITIONED|
                                                        exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                          data-scan []<-[$$p1] <- test.ParquetDataset1 project ({entities:{hashtags:[{text:any}]},user:{name:any}}) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                          -- DATASOURCE_SCAN  |PARTITIONED|
                                                            exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                              empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                              -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                                              exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                              -- HASH_PARTITION_EXCHANGE [$$88]  |PARTITIONED|
                                                assign [$$111, $$88] <- [true, $$ht2.getField("text")] project: [$$111, $$88] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                -- ASSIGN  |PARTITIONED|
                                                  unnest $$ht2 <- scan-collection($$106) project: [$$ht2] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                  -- UNNEST  |PARTITIONED|
                                                    assign [$$106] <- [$$p2.getField("entities").getField("hashtags")] project: [$$106] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                    -- ASSIGN  |PARTITIONED|
                                                      exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                        data-scan []<-[$$p2] <- test.ParquetDataset2 project ({entities:{hashtags:[{text:any}]}}) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                        -- DATASOURCE_SCAN  |PARTITIONED|
                                                          exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                            empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
