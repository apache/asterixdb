distribute result [$$d] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    project ([$$d]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
    -- STREAM_PROJECT  |PARTITIONED|
      exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
      -- SORT_MERGE_EXCHANGE [$$16(ASC) ]  |PARTITIONED|
        order (ASC, $$16) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
        -- STABLE_SORT [$$16(ASC)]  |PARTITIONED|
          exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
            select (neq(count($$d.getField("array")), 0)) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
            -- STREAM_SELECT  |PARTITIONED|
              exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                data-scan []<-[$$16, $$d] <- test.ColumnDataset [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                -- DATASOURCE_SCAN  |PARTITIONED|
                  exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                    -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
