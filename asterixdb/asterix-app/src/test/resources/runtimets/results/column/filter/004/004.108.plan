distribute result [$$52] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    assign [$$52] <- [{"$1": $$55}] project: [$$52] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
    -- ASSIGN  |UNPARTITIONED|
      aggregate [$$55] <- [agg-sql-sum($$58)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
      -- AGGREGATE  |UNPARTITIONED|
        exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
        -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
          aggregate [$$58] <- [agg-sql-count(1)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
          -- AGGREGATE  |PARTITIONED|
            select ($$45) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
            -- STREAM_SELECT  |PARTITIONED|
              project ([$$45]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
              -- STREAM_PROJECT  |PARTITIONED|
                subplan {
                          aggregate [$$45] <- [non-empty-stream()] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- AGGREGATE  |LOCAL|
                            select (or(eq($$59, "2011"), eq($$59, "2016"))) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- STREAM_SELECT  |LOCAL|
                              assign [$$59] <- [substring($$D, 0, 4)] project: [$$59] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                              -- ASSIGN  |LOCAL|
                                unnest $$D <- scan-collection($$56) project: [$$D] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                -- UNNEST  |LOCAL|
                                  project ([$$56]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                  -- STREAM_PROJECT  |LOCAL|
                                    nested tuple source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                    -- NESTED_TUPLE_SOURCE  |LOCAL|
                       } [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                -- SUBPLAN  |PARTITIONED|
                  assign [$$56] <- [$$C.getField("dates")] project: [$$56] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                  -- ASSIGN  |PARTITIONED|
                    project ([$$C]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                    -- STREAM_PROJECT  |PARTITIONED|
                      exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        data-scan []<-[$$54, $$C] <- TestYelp.YelpCheckin project ({dates:[any]}) filter on: or(eq(substring(scan-collection($$C.getField("dates")), 0, 4), "2011"), eq(substring(scan-collection($$C.getField("dates")), 0, 4), "2016")) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                        -- DATASOURCE_SCAN  |PARTITIONED|
                          exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
