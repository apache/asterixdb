<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
 ! Licensed to the Apache Software Foundation (ASF) under one
 ! or more contributor license agreements.  See the NOTICE file
 ! distributed with this work for additional information
 ! regarding copyright ownership.  The ASF licenses this file
 ! to you under the Apache License, Version 2.0 (the
 ! "License"); you may not use this file except in compliance
 ! with the License.  You may obtain a copy of the License at
 !
 !   http://www.apache.org/licenses/LICENSE-2.0
 !
 ! Unless required by applicable law or agreed to in writing,
 ! software distributed under the License is distributed on an
 ! "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ! KIND, either express or implied.  See the License for the
 ! specific language governing permissions and limitations
 ! under the License.
 !-->
<test-suite xmlns="urn:xml.testframework.asterix.apache.org" ResultOffsetPath="results" QueryOffsetPath="queries_sqlpp" QueryFileExtension=".sqlpp">
  <test-group name="copy-to">
    <test-case FilePath="copy-to">
      <compilation-unit name="partition">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">partition</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="simple-write">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">simple-write</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="query">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">query</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="default-namespace">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">default-namespace</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="parquet-simple">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">parquet-simple</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="parquet-tweet">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">parquet-tweet</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="parquet-partition-heterogeneous">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">parquet-partition-heterogeneous</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="parquet-utf8">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">parquet-utf8</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="parquet-heterogeneous">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">parquet-heterogeneous</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="parquet-cover-data-types">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">parquet-cover-data-types</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="parquet-file-writers">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">parquet-file-writers</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="parquet-field-names">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">parquet-field-names</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="parquet-empty-array">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">parquet-empty-array</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="parquet-type-hierarchy">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">parquet-type-hierarchy</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="empty-path">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">empty-path</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to">
      <compilation-unit name="order-by">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">order-by</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/negative">
      <compilation-unit name="early-missing">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">early-missing</output-dir>
        <expected-error>ASX0064: Path expression produced a value of type 'missing'. Path must be of type string</expected-error>
        <expected-error>ASX0064: Path expression produced a value of type 'null'. Path must be of type string</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/negative" check-warnings="true">
      <compilation-unit name="long-path">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">long-path</output-dir>
        <expected-error>ASX0065: Length of the file path 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' exceeds the maximum length of '1024 bytes' allowed in S3</expected-error>
        <expected-warn>ASX0065: Length of the file path 'ford/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/' exceeds the maximum length of '1024 bytes' allowed in S3 (in line 29, at column 7)</expected-warn>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/negative">
      <compilation-unit name="bucket-does-not-exist">
        <output-dir compare="Text">bucket-does-not-exist</output-dir>
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"i-do-not-exist",' />
        <placeholder name="additional_Properties" value='("container"="i-do-not-exist")' />
        <expected-error>External sink error. software.amazon.awssdk.services.s3.model.NoSuchBucketException: The specified bucket does not exist</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/negative">
      <compilation-unit name="non-empty-folder">
        <output-dir compare="Text">non-empty-folder</output-dir>
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <expected-error>ASX0062: Cannot write to a non-empty directory 'copy-to-result/duplicate-write'</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/negative" check-warnings="true">
      <compilation-unit name="runtime-missing">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">runtime-missing</output-dir>
        <expected-warn>ASX0064: Path expression produced a value of type 'missing'. Path must be of type string (in line 24, at column 7)</expected-warn>
        <expected-warn>ASX0064: Path expression produced a value of type 'missing'. Path must be of type string (in line 31, at column 7)</expected-warn>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/negative">
      <compilation-unit name="supported-adapter-format-compression">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">supported-adapter-format-compression</output-dir>
        <expected-error>ASX1189: Unsupported writing format 'avro'. Supported formats: [csv, json, parquet]</expected-error>
        <expected-error>ASX1202: Unsupported compression scheme rar. Supported schemes for json are [gzip]</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/negative">
      <compilation-unit name="parquet-error-checks">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">parquet-error-checks</output-dir>
        <expected-error>ASX0037: Type mismatch: expected value of type BINARY, but got the value of type bigint</expected-error>
        <expected-error>HYR0132: Extra field in the result, field 'second' does not exist at 'nested' in the schema</expected-error>
        <expected-error>HYR0131: Result does not follow the schema, group type expected but found primitive type at 'nested'</expected-error>
        <expected-error>HYR0131: Result does not follow the schema, primitive type expected but found group type at 'name'</expected-error>
        <expected-error>ASX1206: Storage units expected for the field 'row-group-size' (e.g., 0.1KB, 100kb, 1mb, 3MB, 8.5GB ...). Provided 'random'</expected-error>
        <expected-error>ASX1206: Storage units expected for the field 'page-size' (e.g., 0.1KB, 100kb, 1mb, 3MB, 8.5GB ...). Provided 'random'</expected-error>
        <expected-error>ASX1202: Unsupported compression scheme rar. Supported schemes for parquet are [gzip, snappy, zstd]</expected-error>
        <expected-error>ASX1001: Syntax error</expected-error>
        <expected-error>ASX1204: 'binary' type not supported in parquet format</expected-error>
        <expected-error>ASX1205: Invalid Parquet Writer Version provided '3'. Supported values: [1, 2]</expected-error>
        <expected-error>ASX0039: Expected integer value, got yvghc (in line 22, at column 6)</expected-error>
        <expected-error>ASX1209: Maximum value allowed for 'max-schemas' is 10. Found 15</expected-error>
        <expected-error>HYR0133: Schema could not be inferred, empty types found in the result</expected-error>
        <expected-error>HYR0134: Schema Limit exceeded, maximum number of heterogeneous schemas allowed : '2'</expected-error>
        <expected-error>ASX1204: 'rectangle' type not supported in parquet format</expected-error>
        <expected-error>ASX0072: Parquet does not support arrays containing mixed data types</expected-error>
        <expected-error>ASX0072: Parquet does not support arrays containing mixed data types</expected-error>
        <expected-error>ASX0072: Parquet does not support arrays containing mixed data types</expected-error>
        <expected-error>ASX0072: Parquet does not support arrays containing mixed data types</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/negative">
      <compilation-unit name="empty-over">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">empty-over</output-dir>
        <expected-error>ASX1001: Syntax error: OVER-clause cannot be empty</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/negative">
      <compilation-unit name="bad-max-objects-per-file">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">bad-max-objects-per-file</output-dir>
        <expected-error>Minimum value allowed for 'max-objects-per-file' is 1000. Found 2</expected-error>
        <expected-error>Expected integer value, got hello</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/negative">
      <compilation-unit name="csv-error-checks">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">csv-error-checks</output-dir>
        <expected-error>ASX1079: Compilation error: TYPE/AS Expression is required for csv format</expected-error>
        <expected-error>ASX1082: Cannot find datatype with name wrongDataType (in line 27, at column 4)</expected-error>
        <expected-error>ASX1217: 'ABCD' is not a valid quote. The length of a quote should be 1</expected-error>
        <expected-error>ASX3049: 'wrongDelimiter' is not a valid delimiter. The length of a delimiter should be 1</expected-error>
        <expected-error>ASX1219: 'wrongEscape' is not a valid escape. The length of a escape should be 1</expected-error>
        <expected-error>ASX1218: 'ABCD' is not a valid force-quote input. The length of a force-quote input should be 1 character</expected-error>
        <expected-error>ASX1207: 'object' type not supported in csv format</expected-error>
        <expected-error>ASX1207: 'array' type not supported in csv format</expected-error>
        <expected-error>Syntax error: Both 'TYPE()' and 'AS()' are provided. Please use either 'TYPE()' or 'AS()'.</expected-error>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="copy-to/csv">
    <test-case FilePath="copy-to/csv">
      <compilation-unit name="simple-csv">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">simple-csv</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/csv">
      <compilation-unit name="type-mismatch">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">type-mismatch</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/csv">
      <compilation-unit name="delimiter">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">delimiter</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/csv">
      <compilation-unit name="header">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">header</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/csv">
      <compilation-unit name="quote-escape">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">quote-escape</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/csv">
      <compilation-unit name="negative">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">quote-escape</output-dir>
        <expected-error>'||' is not a valid quote. The length of a quote should be 1</expected-error>
        <expected-error>'||' is not a valid delimiter. The length of a delimiter should be 1</expected-error>
        <expected-error>'||' is not a valid escape. The length of a escape should be 1</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="copy-to/csv">
      <compilation-unit name="datetime">
        <placeholder name="adapter" value="S3" />
        <placeholder name="pathprefix" value="" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additionalProperties" value='"container":"playground",' />
        <placeholder name="additional_Properties" value='("container"="playground")' />
        <output-dir compare="Text">datetime</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="aws-s3-external-dataset">
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/json/json">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/json/json</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/s3">
      <compilation-unit name="create-with-session-token">
        <output-dir compare="Text">create-with-session-token</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/json/gz">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/json/gz</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/json/mixed">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/json/mixed</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/csv/csv">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/csv/csv</output-dir>
      </compilation-unit>
    </test-case><test-case FilePath="external-dataset">
    <compilation-unit name="common/csv/gz">
      <placeholder name="adapter" value="S3" />
      <output-dir compare="Text">common/csv/gz</output-dir>
    </compilation-unit>
  </test-case><test-case FilePath="external-dataset">
    <compilation-unit name="common/csv/mixed">
      <placeholder name="adapter" value="S3" />
      <output-dir compare="Text">common/csv/mixed</output-dir>
    </compilation-unit>
  </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/tsv/tsv">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/tsv/tsv</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/tsv/gz">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/tsv/gz</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/tsv/mixed">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/tsv/mixed</output-dir>
      </compilation-unit>
    </test-case>
    <!-- Parquet Tests Start -->
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/select-all-fields">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/select-all-fields</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/select-count-one-field">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/select-count-one-field</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/multi-file-multi-schema">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/multi-file-multi-schema</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/field-access-pushdown">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/field-access-pushdown</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/ASTERIXDB-3540">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Clean-JSON">common/parquet/ASTERIXDB-3540</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/array-access-pushdown">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/array-access-pushdown</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/missing-fields">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/missing-fields</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/string-standard-utf8">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/string-standard-utf8</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/object-concat">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/object-concat</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset" check-warnings="true">
      <compilation-unit name="common/parquet/type-mismatch">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/type-mismatch</output-dir>
        <expected-warn>ASX0002: Type mismatch: function field-access-by-name expects its 1st input parameter to be of type object, but the actual input type is array (in line 31, at column 29)</expected-warn>
        <expected-warn>ASX0002: Type mismatch: function array-star expects its 1st input parameter to be of type array, but the actual input type is object (in line 31, at column 24)</expected-warn>
        <expected-warn>ASX0002: Type mismatch: function field-access-by-name expects its 1st input parameter to be of type object, but the actual input type is array (in line 31, at column 52)</expected-warn>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/heterogeneous-access-pushdown">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/heterogeneous-access-pushdown</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/pushdown-plans">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/pushdown-plans</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/s3">
      <compilation-unit name="parquet-anonymous-access">
        <output-dir compare="Text">parquet-anonymous-access</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/s3">
      <compilation-unit name="parquet-temporary-access">
        <output-dir compare="Text">parquet-temporary-access</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/invalid-type">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">none</output-dir>
        <expected-error>ASX1161: Type 'ParquetType' contains declared fields, which is not supported for 'parquet' format</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset" check-warnings="true">
      <compilation-unit name="common/parquet/no-files">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/no-files</output-dir>
        <source-location>false</source-location>
        <expected-warn>The provided external dataset configuration returned no files from the external source</expected-warn>
        <expected-warn>The provided external dataset configuration returned no files from the external source</expected-warn>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/invalid-parquet-files">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">none</output-dir>
        <source-location>false</source-location>
        <expected-error>20-records.json. Reason: not a Parquet file</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset" check-warnings="true">
      <compilation-unit name="common/parquet/parquet-types/unset-flags">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/parquet-types/unset-flags</output-dir>
        <source-location>false</source-location>
        <expected-warn>Parquet file(s) contain unsigned integer that is larger than the 'bigint' range</expected-warn>
        <expected-warn>Parquet file(s) contain values of the temporal type 'datetime' that are adjusted to UTC. Recreate the external dataset and set the option 'timezone' to get the local-adjusted 'datetime' value</expected-warn>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset" check-warnings="true">
      <compilation-unit name="common/parquet/parquet-types/decimal">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/parquet-types/decimal</output-dir>
        <source-location>false</source-location>
        <expected-error>ASX0054: Parquet type 'required int32 decimal32_field (DECIMAL(5,4))' is not supported by default. To enable type conversion, recreate the external dataset with the option 'decimal-to-double' enabled</expected-error>
        <expected-warn>Parquet decimal precision loss: precision '22' is greater than the maximum supported precision '20'</expected-warn>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset" check-warnings="true">
      <compilation-unit name="common/parquet/parquet-types/temporal">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/parquet-types/temporal</output-dir>
        <source-location>false</source-location>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/parquet/parquet-types/invalid-timezone">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/parquet-types/invalid-timezone</output-dir>
        <source-location>false</source-location>
        <expected-error>Provided timezone is invalid: 'invalid-timezone'</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset" check-warnings="true">
      <compilation-unit name="common/parquet/parquet-types/disable-json-parsing">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/parquet/parquet-types/disable-json-parsing</output-dir>
        <source-location>false</source-location>
      </compilation-unit>
    </test-case>
    <!-- Parquet Tests End -->
    <!-- Deltalake Tests Start -->
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/deltalake-multiple-file-read">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/deltalake-multiple-file-read</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/deltalake-empty">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/deltalake-empty</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/deltalake-modified-data">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/deltalake-modified-data</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/deltalake-all-type">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/deltalake-all-type</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/deltalake-field-access-pushdown">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/deltalake-field-access-pushdown</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/deltalake-invalid-file-format">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">none</output-dir>
        <expected-error>Supported file format for 'delta' tables is 'parquet', but 'avro' was provided.</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/deltalake-table-not-exists">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">none</output-dir>
        <expected-error>ASX1108: External source error. io.delta.kernel.exceptions.TableNotFoundException: Delta table at path `s3a://playground/delta-data/s1` is not found.</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/deltalake-file-one">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/deltalake-file-one</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/deltalake-file-nine">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/deltalake-file-nine</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/deltalake-partitioned-file-read">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/deltalake-partitioned-file-read</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/deltalake-timestamp-partitioned-file-read">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/deltalake-timestamp-partitioned-file-read</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/avro-types/avro-map">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/avro-types/avro-map</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/avro-logical-types">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/avro/avro-logical-types</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/avro-types/avro-nested-records">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/avro-types/avro-nested-records</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/avro-types/avro-primitives">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/avro-types/avro-primitives</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/avro-types/avro-union">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/avro-types/avro-union</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/type-mismatch">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/type-mismatch</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/string-standard-utf8">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/string-standard-utf8</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/select-all-fields">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/select-all-fields</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/select-count-one-field">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/select-count-one-field</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/array-access">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/array-access</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/field-access">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/field-access</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/heterogeneous-access">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/heterogeneous-access</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/invalid-avro-files">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">none</output-dir>
        <expected-error>External source error. org.apache.avro.InvalidAvroMagicException: Not an Avro data file.</expected-error>
        <source-location>false</source-location>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/invalid-type">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">none</output-dir>
        <expected-error>ASX3123: Type 'AvroType' contains declared fields, which is not supported for 'avro' format</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/missing-fields">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/missing-fields</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/multi-file-multi-schema">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/multi-file-multi-schema</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/no-files">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/no-files</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/avro/object-concat">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">common/avro/object-concat</output-dir>
      </compilation-unit>
    </test-case>
    <!-- Dynamic prefixes tests start -->
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="embed-with-closed-type">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">embed-with-closed-type</output-dir>
        <expected-error>Compilation error: A closed type cannot be used when 'embed-filter-values' is enabled</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="one-field">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">one-field</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes" check-warnings="true">
      <compilation-unit name="type-mismatch">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">type-mismatch</output-dir>
        <expected-warn>In the file 'external-filter/department/accounting/0.json' the expected type for the 'name' field is 'bigint' but the value 'accounting' was found instead.</expected-warn>
        <expected-warn>In the file 'external-filter/department/engineering/0.json' the expected type for the 'name' field is 'bigint' but the value 'engineering' was found instead.</expected-warn>
        <expected-warn>In the file 'external-filter/department/hr/0.json' the expected type for the 'name' field is 'bigint' but the value 'hr' was found instead.</expected-warn>
        <expected-warn>The provided external dataset configuration returned no files from the external source</expected-warn>
        <expected-warn>In the file 'external-filter/department/accounting/0.json' the expected type for the 'name' field is 'bigint' but the value 'accounting' was found instead.</expected-warn>
        <expected-warn>In the file 'external-filter/department/engineering/0.json' the expected type for the 'name' field is 'bigint' but the value 'engineering' was found instead.</expected-warn>
        <expected-warn>In the file 'external-filter/department/hr/0.json' the expected type for the 'name' field is 'bigint' but the value 'hr' was found instead.</expected-warn>
        <expected-warn>The provided external dataset configuration returned no files from the external source</expected-warn>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="query">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">query</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="embed-one-value">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">embed-one-value</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="embed-multiple-values">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">embed-multiple-values</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="embed-flat">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">embed-flat</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="embed-with-nested-values">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">embed-with-nested-values</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="not-in">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">not-in</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="computed-field-between-static-parts">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">computed-field-between-static-parts</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="computed-field-segment-pattern-mismatch">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">computed-field-segment-pattern-mismatch</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="computed-field-at-start">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">computed-field-at-start</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="computed-field-unsupported-type">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">computed-field-unsupported-type</output-dir>
        <expected-error>Unsupported computed field type: 'polygon'</expected-error>
        <expected-error>Unsupported computed field type: 'zft'</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="using-limit">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">using-limit</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="views">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">views</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="duplicate-field">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">duplicate-field</output-dir>
        <expected-error>Duplicate field name 'year'</expected-error>
        <expected-error>Duplicate field name 'year'</expected-error>
        <expected-error>Duplicate field name 'year'</expected-error>
        <expected-error>Duplicate field name 'year'</expected-error>
        <expected-error>Duplicate field name 'a.b'</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes">
      <compilation-unit name="conflicted-fields">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">conflicted-fields</output-dir>
        <expected-error>A computed field cannot have more than one type. 'person.name' is both 'string' and 'object'.</expected-error>
        <expected-error>A computed field cannot have more than one type. 'person.name' is both 'string' and 'object'.</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/parquet">
      <compilation-unit name="one-field">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">one-field</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/parquet" check-warnings="true">
      <compilation-unit name="type-mismatch">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">type-mismatch</output-dir>
        <expected-warn>In the file 'parquet-data/external-filter/department/accounting/0.parquet' the expected type for the 'name' field is 'bigint' but the value 'accounting' was found instead.</expected-warn>
        <expected-warn>In the file 'parquet-data/external-filter/department/engineering/0.parquet' the expected type for the 'name' field is 'bigint' but the value 'engineering' was found instead.</expected-warn>
        <expected-warn>In the file 'parquet-data/external-filter/department/hr/0.parquet' the expected type for the 'name' field is 'bigint' but the value 'hr' was found instead.</expected-warn>
        <expected-warn>The provided external dataset configuration returned no files from the external source</expected-warn>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/parquet">
      <compilation-unit name="query">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">query</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/parquet">
      <compilation-unit name="embed-one-value">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">embed-one-value</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/parquet">
      <compilation-unit name="embed-multiple-values">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">embed-multiple-values</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/parquet">
      <compilation-unit name="embed-flat">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">embed-flat</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/parquet">
      <compilation-unit name="embed-with-nested-values">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">embed-with-nested-values</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/parquet">
      <compilation-unit name="computed-field-between-static-parts">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">computed-field-between-static-parts</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/parquet">
      <compilation-unit name="using-limit">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">using-limit</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/parquet">
      <compilation-unit name="views">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">views</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/parquet">
      <compilation-unit name="duplicate-field">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">duplicate-field</output-dir>
        <expected-error>Duplicate field name 'year'</expected-error>
        <expected-error>Duplicate field name 'year'</expected-error>
        <expected-error>Duplicate field name 'year'</expected-error>
        <expected-error>Duplicate field name 'year'</expected-error>
        <expected-error>Duplicate field name 'a.b'</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/csv">
      <compilation-unit name="embed-one-value">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">embed-one-value</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/csv">
      <compilation-unit name="embed-multiple-values">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">embed-multiple-values</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/csv">
      <compilation-unit name="embed-multiple-missing-values">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">embed-multiple-missing-values</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/parquet">
      <compilation-unit name="computed-field-segment-pattern-mismatch">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">computed-field-segment-pattern-mismatch</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/parquet">
      <compilation-unit name="computed-field-unsupported-type">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">computed-field-unsupported-type</output-dir>
        <expected-error>Unsupported computed field type: 'polygon'</expected-error>
        <expected-error>Unsupported computed field type: 'zft'</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/avro">
      <compilation-unit name="one-field">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">one-field</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/avro">
      <compilation-unit name="query">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">query</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/avro">
      <compilation-unit name="embed-one-value">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">embed-one-value</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/avro">
      <compilation-unit name="embed-multiple-values">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">embed-multiple-values</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/avro">
      <compilation-unit name="embed-flat">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">embed-flat</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/avro">
      <compilation-unit name="embed-with-nested-values">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">embed-with-nested-values</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/avro">
      <compilation-unit name="using-limit">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">using-limit</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common/dynamic-prefixes/avro">
      <compilation-unit name="views">
        <placeholder name="adapter" value="S3" />
        <placeholder name="path_prefix" value="" />
        <placeholder name="additional_Properties" value='("container" = "playground")' />
        <output-dir compare="Text">views</output-dir>
      </compilation-unit>
    </test-case>
    <!-- Dynamic prefixes tests end -->
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/empty-string-definition">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/empty-string-definition</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/over-1000-objects">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/over-1000-objects</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/malformed-json">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/malformed-json</output-dir>
        <expected-error>Parsing error at malformed-data/duplicate-fields.json line 1 field 'field': Duplicate field 'field'</expected-error>
        <expected-error>Parsing error at malformed-data/malformed-json.json line 1 field 'field': Unexpected character ('}' (code 125)): was expecting double-quote to start field name</expected-error>
        <expected-error>Parsing error at malformed-data/malformed-json-2.json line 4 field 'array_f': Unexpected character (']' (code 93)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')</expected-error>
        <expected-error>Parsing error at malformed-data/malformed-jsonl-1.json line 3 field 'field2': Unrecognized token 'truee': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')</expected-error>
        <expected-error>Parsing error at malformed-data/malformed-jsonl-2.json line 11 field 'array_f': Unexpected character (']' (code 93)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/definition-does-not-exist">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/definition-does-not-exist</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/invalid-endpoint">
        <placeholder name="adapter" value="S3" />
        <placeholder name="serviceEndpoint" value="^invalid-endpoint^" />
        <output-dir compare="Text">common/invalid-endpoint</output-dir>
        <expected-error>External source error. Invalid service endpoint ^invalid-endpoint^</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/bucket-does-not-exist">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/bucket-does-not-exist</output-dir>
        <expected-error>External source error. software.amazon.awssdk.services.s3.model.NoSuchBucketException: The specified bucket does not exist (Service: S3, Status Code: 404</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset" check-warnings="true">
      <compilation-unit name="common/no-files-returned/definition-points-to-nothing">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/no-files-returned/definition-points-to-nothing</output-dir>
        <source-location>false</source-location>
        <expected-warn>The provided external dataset configuration returned no files from the external source</expected-warn>
        <expected-warn>The provided external dataset configuration returned no files from the external source</expected-warn>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset" check-warnings="true">
      <compilation-unit name="common/no-files-returned/exclude-all-files">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/no-files-returned/exclude-all-files</output-dir>
        <expected-warn>The provided external dataset configuration returned no files from the external source</expected-warn>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset" check-warnings="true">
      <compilation-unit name="common/no-files-returned/include-no-files">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/no-files-returned/include-no-files</output-dir>
        <expected-warn>The provided external dataset configuration returned no files from the external source</expected-warn>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/s3">
      <compilation-unit name="non-s3-region">
        <output-dir compare="Text">non-s3-region</output-dir>
        <expected-error>Provided S3 region is not supported: 'some-new-region'</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/s3">
      <compilation-unit name="cross-region/boolean-value">
        <output-dir compare="Text">cross-region/boolean-value</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/s3">
      <compilation-unit name="cross-region/non-boolean-value">
        <output-dir compare="Text">cross-region/non-boolean-value</output-dir>
        <expected-error>c</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/s3">
      <compilation-unit name="anonymous_no_auth">
        <output-dir compare="Text">anonymous_no_auth</output-dir>
        <expected-error>ASX3119: Parameter 'secretAccessKey' is required if 'accessKeyId' is provided</expected-error>
        <expected-error>ASX3119: Parameter 'accessKeyId' is required if 'secretAccessKey' is provided</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/common">
      <compilation-unit name="query-with-limit-plan">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">query-with-limit-plan</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="s3-include-exclude">
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/bad-name-1">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/bad-name-1</output-dir>
        <expected-error>Invalid format for property 'exclude1'</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/bad-name-2">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/bad-name-2</output-dir>
        <expected-error>Invalid format for property 'exclude#'</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/bad-name-3">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/bad-name-3</output-dir>
        <expected-error>Invalid format for property 'exclude#hello'</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/both">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/both</output-dir>
        <expected-error>The parameters 'include' and 'exclude' cannot be provided at the same time</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/exclude-all">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/exclude-all</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/exclude-1">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/exclude-1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/exclude-2">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/exclude-2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/exclude-3">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/exclude-3</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/exclude-4">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/exclude-4</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/exclude-5">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/exclude-5</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/exclude-6">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/exclude-6</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/include-all">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/include-all</output-dir>
        <expected-error>Malformed input stream</expected-error>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/include-1">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/include-1</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/include-2">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/include-2</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/include-3">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/include-3</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/include-4">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/include-4</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/include-5">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/include-5</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/include-6">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/include-6</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/include-7">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/include-7</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/include-8">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/include-8</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/include-9">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/include-9</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/include-10">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/include-10</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/include-11">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/include-11</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/include-exclude/include-12">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/include-exclude/include-12</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/start-with-slash">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/start-with-slash</output-dir>
        <expected-error>Prefix should not start with "/". Prefix: '/json-data/reviews/single-line/json'</expected-error>
      </compilation-unit>
    </test-case>
  </test-group>
  <test-group name="bom">
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/byte_order_mark/json">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/byte_order_mark/json</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/byte_order_mark/csv">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/byte_order_mark/csv</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset">
      <compilation-unit name="common/byte_order_mark/tsv">
        <placeholder name="adapter" value="S3" />
        <output-dir compare="Text">common/byte_order_mark/tsv</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
  <!-- Iceberg Tests Start -->
  <!-- ASTERIXDB-3468: iceberg tests failing due to unsupported version
  <test-group name="iceberg">
    <test-case FilePath="external-dataset/s3">
      <compilation-unit name="iceberg">
        <output-dir compare="Text">iceberg</output-dir>
      </compilation-unit>
    </test-case>
    <test-case FilePath="external-dataset/s3">
      <compilation-unit name="iceberg-unsupported-version">
        <output-dir compare="Text">none</output-dir>
        <expected-error>ASX1179: Unsupported iceberg format version</expected-error>
      </compilation-unit>
    </test-case>
      <test-case FilePath="external-dataset/s3">
          <compilation-unit name="iceberg-metadata-invalid-location">
              <output-dir compare="Text">none</output-dir>
              <expected-error>Unable to create adapter</expected-error>
          </compilation-unit>
      </test-case>
      <test-case FilePath="external-dataset/s3">
          <compilation-unit name="iceberg-metadata-specific-location">
              <output-dir compare="Text">none</output-dir>
              <expected-error>ASX1178: Unsupported iceberg table</expected-error>
          </compilation-unit>
      </test-case>
      <test-case FilePath="external-dataset/s3">
          <compilation-unit name="iceberg-mixed-data-format">
              <output-dir compare="Text">none</output-dir>
              <expected-error>avro-file.avro. Reason: not a Parquet file</expected-error>
          </compilation-unit>
      </test-case>
      <test-case FilePath="external-dataset/s3">
        <compilation-unit name="iceberg-empty">
          <output-dir compare="Text">iceberg-empty</output-dir>
        </compilation-unit>
      </test-case>
      <test-case FilePath="external-dataset/s3">
          <compilation-unit name="iceberg-multiple-data-files">
              <output-dir compare="Text">iceberg-multiple-data-files</output-dir>
          </compilation-unit>
      </test-case>
      <test-case FilePath="external-dataset/s3">
          <compilation-unit name="iceberg-modified-data">
              <output-dir compare="Text">iceberg-modified-data</output-dir>
          </compilation-unit>
      </test-case>
  </test-group>
  -->
  <test-group name="copy-from">
    <test-case FilePath="copy-from">
      <compilation-unit name="copy-2">
        <output-dir compare="Text">copy-2</output-dir>
      </compilation-unit>
    </test-case>
  </test-group>
</test-suite>
