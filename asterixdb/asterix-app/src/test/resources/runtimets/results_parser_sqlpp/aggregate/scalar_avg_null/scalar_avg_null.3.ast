DataverseUse test
Query:
Let Variable [ Name=$i8 ]
  :=
  FunctionCall asterix.avg@1[
    OrderedListConstructor [
      FunctionCall asterix.int8@1[
        LiteralExpr [STRING] [1]
      ]
      FunctionCall asterix.int8@1[
        LiteralExpr [STRING] [2]
      ]
      FunctionCall asterix.int8@1[
        LiteralExpr [STRING] [3]
      ]
      LiteralExpr [NULL]
    ]
  ]
Let Variable [ Name=$i16 ]
  :=
  FunctionCall asterix.avg@1[
    OrderedListConstructor [
      FunctionCall asterix.int16@1[
        LiteralExpr [STRING] [1]
      ]
      FunctionCall asterix.int16@1[
        LiteralExpr [STRING] [2]
      ]
      FunctionCall asterix.int16@1[
        LiteralExpr [STRING] [3]
      ]
      LiteralExpr [NULL]
    ]
  ]
Let Variable [ Name=$i32 ]
  :=
  FunctionCall asterix.avg@1[
    OrderedListConstructor [
      FunctionCall asterix.int32@1[
        LiteralExpr [STRING] [1]
      ]
      FunctionCall asterix.int32@1[
        LiteralExpr [STRING] [2]
      ]
      FunctionCall asterix.int32@1[
        LiteralExpr [STRING] [3]
      ]
      LiteralExpr [NULL]
    ]
  ]
Let Variable [ Name=$i64 ]
  :=
  FunctionCall asterix.avg@1[
    OrderedListConstructor [
      FunctionCall asterix.int64@1[
        LiteralExpr [STRING] [1]
      ]
      FunctionCall asterix.int64@1[
        LiteralExpr [STRING] [2]
      ]
      FunctionCall asterix.int64@1[
        LiteralExpr [STRING] [3]
      ]
      LiteralExpr [NULL]
    ]
  ]
Let Variable [ Name=$f ]
  :=
  FunctionCall asterix.avg@1[
    OrderedListConstructor [
      FunctionCall asterix.float@1[
        LiteralExpr [STRING] [1]
      ]
      FunctionCall asterix.float@1[
        LiteralExpr [STRING] [2]
      ]
      FunctionCall asterix.float@1[
        LiteralExpr [STRING] [3]
      ]
      LiteralExpr [NULL]
    ]
  ]
Let Variable [ Name=$d ]
  :=
  FunctionCall asterix.avg@1[
    OrderedListConstructor [
      FunctionCall asterix.double@1[
        LiteralExpr [STRING] [1]
      ]
      FunctionCall asterix.double@1[
        LiteralExpr [STRING] [2]
      ]
      FunctionCall asterix.double@1[
        LiteralExpr [STRING] [3]
      ]
      LiteralExpr [NULL]
    ]
  ]
SELECT ELEMENT [
Variable [ Name=$i ]
]
FROM [  OrderedListConstructor [
    Variable [ Name=$i8 ]
    Variable [ Name=$i16 ]
    Variable [ Name=$i32 ]
    Variable [ Name=$i64 ]
    Variable [ Name=$f ]
    Variable [ Name=$d ]
  ]
  AS Variable [ Name=$i ]
]
