DataverseUse test
Query:
SELECT ELEMENT [
RecordConstructor [
  (
    LiteralExpr [STRING] [timebin]
    :
    Variable [ Name=$bin ]
  )
  (
    LiteralExpr [STRING] [count]
    :
    FunctionCall asterix.count@1[
      (
        SELECT ELEMENT [
        LiteralExpr [LONG] [1]
        ]
        FROM [          Variable [ Name=$g ]
          AS Variable [ Name=$g ]
        ]
      )
    ]
  )
  (
    LiteralExpr [STRING] [total_ms]
    :
    FunctionCall asterix.sum@1[
      (
        SELECT ELEMENT [
        FunctionCall asterix.ms-from-day-time-duration@1[
          FunctionCall asterix.duration-from-interval@1[
            FunctionCall asterix.get-overlapping-interval@2[
              Variable [ Name=$bin ]
              FieldAccessor [
                FieldAccessor [
                  Variable [ Name=$g ]
                  Field=i2
                ]
                Field=interval
              ]
            ]
          ]
        ]
        ]
        FROM [          Variable [ Name=$g ]
          AS Variable [ Name=$g ]
        ]
      )
    ]
  )
]
]
FROM [  (
    SELECT ELEMENT [
    RecordConstructor [
      (
        LiteralExpr [STRING] [interval]
        :
        FunctionCall asterix.interval-start-from-time@2[
          FieldAccessor [
            Variable [ Name=$i1 ]
            Field=time
          ]
          FieldAccessor [
            Variable [ Name=$i1 ]
            Field=duration
          ]
        ]
      )
    ]
    ]
    FROM [      FunctionCall asterix.dataset@1[
        LiteralExpr [STRING] [test.tsdata]
      ]
      AS Variable [ Name=$i1 ]
    ]
    Orderby
      FieldAccessor [
        Variable [ Name=$i1 ]
        Field=time
      ]
      ASC

  )
  AS Variable [ Name=$i2 ]
,
  FunctionCall asterix.overlap-bins@3[
    FieldAccessor [
      Variable [ Name=$i2 ]
      Field=interval
    ]
    FunctionCall asterix.time@1[
      LiteralExpr [STRING] [00:00:00]
    ]
    FunctionCall asterix.day-time-duration@1[
      LiteralExpr [STRING] [PT1H30M]
    ]
  ]
  AS Variable [ Name=$j ]
]
Groupby
  Variable [ Name=$bin ]
  :=
  Variable [ Name=$j ]
  GROUP AS Variable [ Name=$g ]
  (
    i2:=Variable [ Name=$i2 ]
    j:=Variable [ Name=$j ]
  )

Orderby
  FunctionCall asterix.get-interval-start@1[
    Variable [ Name=$bin ]
  ]
  ASC

