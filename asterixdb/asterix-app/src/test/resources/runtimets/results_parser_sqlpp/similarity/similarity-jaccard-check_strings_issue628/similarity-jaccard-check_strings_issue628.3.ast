DataverseUse test
Set import-private-functions=true
Query:
Let Variable [ Name=$v1 ]
  :=
  OrderedListConstructor [
    LiteralExpr [STRING] [query]
    LiteralExpr [STRING] [processing]
    LiteralExpr [STRING] [in]
    LiteralExpr [STRING] [multidatabase]
    LiteralExpr [STRING] [systems]
  ]
Let Variable [ Name=$v2 ]
  :=
  OrderedListConstructor [
    LiteralExpr [STRING] [query]
    LiteralExpr [STRING] [processing]
    LiteralExpr [STRING] [in]
    LiteralExpr [STRING] [object]
    LiteralExpr [STRING] [oriented]
    LiteralExpr [STRING] [database]
    LiteralExpr [STRING] [systems]
  ]
Let Variable [ Name=$v3 ]
  :=
  OrderedListConstructor [
    LiteralExpr [STRING] [dynamic]
    LiteralExpr [STRING] [query]
    LiteralExpr [STRING] [optimization]
    LiteralExpr [STRING] [and]
    LiteralExpr [STRING] [query]
    LiteralExpr [STRING] [processing]
    LiteralExpr [STRING] [in]
    LiteralExpr [STRING] [multidatabase]
    LiteralExpr [STRING] [systems]
    LiteralExpr [STRING] [1]
  ]
Let Variable [ Name=$v4 ]
  :=
  OrderedListConstructor [
    LiteralExpr [STRING] [transaction]
    LiteralExpr [STRING] [management]
    LiteralExpr [STRING] [in]
    LiteralExpr [STRING] [multidatabase]
    LiteralExpr [STRING] [systems]
  ]
Let Variable [ Name=$v5 ]
  :=
  OrderedListConstructor [
    LiteralExpr [STRING] [overview]
    LiteralExpr [STRING] [of]
    LiteralExpr [STRING] [multidatabase]
    LiteralExpr [STRING] [transaction]
    LiteralExpr [STRING] [management]
  ]
Let Variable [ Name=$results ]
  :=
  OrderedListConstructor [
    FunctionCall asterix.similarity-jaccard-check@3[
      Variable [ Name=$v1 ]
      Variable [ Name=$v2 ]
      LiteralExpr [FLOAT] [0.5]
    ]
    FunctionCall asterix.similarity-jaccard-check@3[
      Variable [ Name=$v1 ]
      Variable [ Name=$v3 ]
      LiteralExpr [FLOAT] [0.5]
    ]
    FunctionCall asterix.similarity-jaccard-check@3[
      Variable [ Name=$v4 ]
      Variable [ Name=$v5 ]
      LiteralExpr [FLOAT] [0.5]
    ]
  ]
SELECT ELEMENT [
Variable [ Name=$i ]
]
FROM [  Variable [ Name=$results ]
  AS Variable [ Name=$i ]
]
