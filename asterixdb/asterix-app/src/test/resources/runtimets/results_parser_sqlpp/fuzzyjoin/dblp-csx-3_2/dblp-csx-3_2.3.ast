DataverseUse fuzzyjoin
Set import-private-functions=true
Query:
SELECT ELEMENT [
RecordConstructor [
  (
    LiteralExpr [STRING] [dblp]
    :
    Variable [ Name=$paperDBLP ]
  )
  (
    LiteralExpr [STRING] [csx]
    :
    Variable [ Name=$paperCSX ]
  )
  (
    LiteralExpr [STRING] [sim]
    :
    FieldAccessor [
      Variable [ Name=$ridpair ]
      Field=sim
    ]
  )
]
]
FROM [  (
    SELECT ELEMENT [
    RecordConstructor [
      (
        LiteralExpr [STRING] [idDBLP]
        :
        Variable [ Name=$idDBLP ]
      )
      (
        LiteralExpr [STRING] [idCSX]
        :
        Variable [ Name=$idCSX ]
      )
      (
        LiteralExpr [STRING] [sim]
        :
        IndexAccessor [
          Variable [ Name=$sim ]
          Index:           LiteralExpr [LONG] [0]
        ]
      )
    ]
    ]
    FROM [      FunctionCall asterix.dataset@1[
        LiteralExpr [STRING] [fuzzyjoin.DBLP]
      ]
      AS Variable [ Name=$paperDBLP ]
,
      FunctionCall asterix.subset-collection@3[
        FunctionCall asterix.dataset@1[
          LiteralExpr [STRING] [fuzzyjoin.tokensDBLP]
        ]
        LiteralExpr [LONG] [0]
        FunctionCall asterix.prefix-len-jaccard@2[
          FunctionCall asterix.len@1[
            FunctionCall asterix.dataset@1[
              LiteralExpr [STRING] [fuzzyjoin.tokensDBLP]
            ]
          ]
          LiteralExpr [FLOAT] [0.5]
        ]
      ]
      AS Variable [ Name=$prefixTokenDBLP ]
,
      FunctionCall asterix.dataset@1[
        LiteralExpr [STRING] [fuzzyjoin.CSX]
      ]
      AS Variable [ Name=$paperCSX ]
,
      FunctionCall asterix.subset-collection@3[
        FunctionCall asterix.dataset@1[
          LiteralExpr [STRING] [fuzzyjoin.tokensCSX]
        ]
        LiteralExpr [LONG] [0]
        FunctionCall asterix.prefix-len-jaccard@2[
          FunctionCall asterix.len@1[
            FunctionCall asterix.dataset@1[
              LiteralExpr [STRING] [fuzzyjoin.tokensCSX]
            ]
          ]
          LiteralExpr [FLOAT] [0.5]
        ]
      ]
      AS Variable [ Name=$prefixTokenCSX ]
    ]
    Let Variable [ Name=$tokensDBLP ]
      :=
      (
        SELECT ELEMENT [
        Variable [ Name=$i ]
        ]
        FROM [          FunctionCall asterix.counthashed-word-tokens@1[
            FieldAccessor [
              Variable [ Name=$paperDBLP ]
              Field=title
            ]
          ]
          AS Variable [ Name=$tokenUnranked ]
,
          (
            SELECT ELEMENT [
            Variable [ Name=$tokenGroupped ]
            ]
            FROM [              FunctionCall asterix.dataset@1[
                LiteralExpr [STRING] [fuzzyjoin.DBLP]
              ]
              AS Variable [ Name=$paper ]
,
              FunctionCall asterix.counthashed-word-tokens@1[
                FieldAccessor [
                  Variable [ Name=$paper ]
                  Field=title
                ]
              ]
              AS Variable [ Name=$token ]
            ]
            Let Variable [ Name=$id ]
              :=
              FieldAccessor [
                Variable [ Name=$paper ]
                Field=id
              ]
            Groupby
              Variable [ Name=$tokenGroupped ]
              :=
              Variable [ Name=$token ]
              GROUP AS Variable [ Name=#2 ]
              (
                paper:=Variable [ Name=$paper ]
                token:=Variable [ Name=$token ]
                id:=Variable [ Name=$id ]
              )

            Orderby
              FunctionCall asterix.sql-count@1[
                (
                  SELECT ELEMENT [
                  FieldAccessor [
                    Variable [ Name=#4 ]
                    Field=id
                  ]
                  ]
                  FROM [                    Variable [ Name=#2 ]
                    AS Variable [ Name=#4 ]
                  ]
                )
              ]
              ASC
              Variable [ Name=$tokenGroupped ]
              ASC

          )
          AS Variable [ Name=$tokenRanked ]
 AT
Variable [ Name=$i ]
        ]
        Where
          OperatorExpr [
            Variable [ Name=$tokenUnranked ]
            =
            Variable [ Name=$tokenRanked ]
          ]
        Orderby
          Variable [ Name=$i ]
          ASC

      )
    Let Variable [ Name=$tokensCSX ]
      :=
      (
        SELECT ELEMENT [
        Variable [ Name=$i ]
        ]
        FROM [          FunctionCall asterix.counthashed-word-tokens@1[
            FieldAccessor [
              Variable [ Name=$paperCSX ]
              Field=title
            ]
          ]
          AS Variable [ Name=$tokenUnranked ]
,
          (
            SELECT ELEMENT [
            Variable [ Name=$tokenGroupped ]
            ]
            FROM [              FunctionCall asterix.dataset@1[
                LiteralExpr [STRING] [fuzzyjoin.DBLP]
              ]
              AS Variable [ Name=$paper ]
,
              FunctionCall asterix.counthashed-word-tokens@1[
                FieldAccessor [
                  Variable [ Name=$paper ]
                  Field=title
                ]
              ]
              AS Variable [ Name=$token ]
            ]
            Let Variable [ Name=$id ]
              :=
              FieldAccessor [
                Variable [ Name=$paper ]
                Field=id
              ]
            Groupby
              Variable [ Name=$tokenGroupped ]
              :=
              Variable [ Name=$token ]
              GROUP AS Variable [ Name=#3 ]
              (
                paper:=Variable [ Name=$paper ]
                token:=Variable [ Name=$token ]
                id:=Variable [ Name=$id ]
              )

            Orderby
              FunctionCall asterix.sql-count@1[
                (
                  SELECT ELEMENT [
                  FieldAccessor [
                    Variable [ Name=#5 ]
                    Field=id
                  ]
                  ]
                  FROM [                    Variable [ Name=#3 ]
                    AS Variable [ Name=#5 ]
                  ]
                )
              ]
              ASC
              Variable [ Name=$tokenGroupped ]
              ASC

          )
          AS Variable [ Name=$tokenRanked ]
 AT
Variable [ Name=$i ]
        ]
        Where
          OperatorExpr [
            Variable [ Name=$tokenUnranked ]
            =
            Variable [ Name=$tokenRanked ]
          ]
        Orderby
          Variable [ Name=$i ]
          ASC

      )
    Let Variable [ Name=$sim ]
      :=
      FunctionCall asterix.similarity-jaccard-prefix@6[
        FunctionCall asterix.len@1[
          FunctionCall asterix.counthashed-word-tokens@1[
            FieldAccessor [
              Variable [ Name=$paperDBLP ]
              Field=title
            ]
          ]
        ]
        Variable [ Name=$tokensDBLP ]
        FunctionCall asterix.len@1[
          FunctionCall asterix.counthashed-word-tokens@1[
            FieldAccessor [
              Variable [ Name=$paperCSX ]
              Field=title
            ]
          ]
        ]
        Variable [ Name=$tokensCSX ]
        Variable [ Name=$prefixTokenDBLP ]
        LiteralExpr [FLOAT] [0.5]
      ]
    Where
      OperatorExpr [
        OperatorExpr [
          Variable [ Name=$prefixTokenDBLP ]
          =
          Variable [ Name=$prefixTokenCSX ]
        ]
        and
        OperatorExpr [
          Variable [ Name=$sim ]
          >=
          LiteralExpr [FLOAT] [0.5]
        ]
      ]
    Groupby
      Variable [ Name=$idDBLP ]
      :=
      FieldAccessor [
        Variable [ Name=$paperDBLP ]
        Field=id
      ]
      Variable [ Name=$idCSX ]
      :=
      FieldAccessor [
        Variable [ Name=$paperCSX ]
        Field=id
      ]
      Variable [ Name=$sim ]
      :=
      Variable [ Name=$sim ]
      GROUP AS Variable [ Name=#1 ]
      (
        paperDBLP:=Variable [ Name=$paperDBLP ]
        prefixTokenDBLP:=Variable [ Name=$prefixTokenDBLP ]
        paperCSX:=Variable [ Name=$paperCSX ]
        prefixTokenCSX:=Variable [ Name=$prefixTokenCSX ]
        tokensDBLP:=Variable [ Name=$tokensDBLP ]
        tokensCSX:=Variable [ Name=$tokensCSX ]
        sim:=Variable [ Name=$sim ]
      )

  )
  AS Variable [ Name=$ridpair ]
,
  FunctionCall asterix.dataset@1[
    LiteralExpr [STRING] [fuzzyjoin.DBLP]
  ]
  AS Variable [ Name=$paperDBLP ]
,
  FunctionCall asterix.dataset@1[
    LiteralExpr [STRING] [fuzzyjoin.CSX]
  ]
  AS Variable [ Name=$paperCSX ]
]
Where
  OperatorExpr [
    OperatorExpr [
      FieldAccessor [
        Variable [ Name=$ridpair ]
        Field=idDBLP
      ]
      =
      FieldAccessor [
        Variable [ Name=$paperDBLP ]
        Field=id
      ]
    ]
    and
    OperatorExpr [
      FieldAccessor [
        Variable [ Name=$ridpair ]
        Field=idCSX
      ]
      =
      FieldAccessor [
        Variable [ Name=$paperCSX ]
        Field=id
      ]
    ]
  ]
Orderby
  FieldAccessor [
    Variable [ Name=$paperDBLP ]
    Field=id
  ]
  ASC
  FieldAccessor [
    Variable [ Name=$paperCSX ]
    Field=id
  ]
  ASC

