distribute result [$$19] [cardinality: 2.0, op-cost: 0.0, total-cost: 100.0]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange [cardinality: 2.0, op-cost: 0.0, total-cost: 100.0]
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    limit 1 [cardinality: 2.0, op-cost: 0.0, total-cost: 100.0]
    -- STREAM_LIMIT  |UNPARTITIONED|
      exchange [cardinality: 2.0, op-cost: 0.0, total-cost: 100.0]
      -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
        project ([$$19]) [cardinality: 2.0, op-cost: 0.0, total-cost: 100.0]
        -- STREAM_PROJECT  |PARTITIONED|
          assign [$$19] <- [{"$1": substring($$20, 0, 21)}] [cardinality: 2.0, op-cost: 0.0, total-cost: 100.0]
          -- ASSIGN  |PARTITIONED|
            limit 1 [cardinality: 2.0, op-cost: 0.0, total-cost: 100.0]
            -- STREAM_LIMIT  |PARTITIONED|
              project ([$$20]) [cardinality: 2.0, op-cost: 0.0, total-cost: 100.0]
              -- STREAM_PROJECT  |PARTITIONED|
                assign [$$20] <- [$$DBLP1.getField(1)] [cardinality: 2.0, op-cost: 0.0, total-cost: 100.0]
                -- ASSIGN  |PARTITIONED|
                  project ([$$DBLP1]) [cardinality: 2.0, op-cost: 0.0, total-cost: 100.0]
                  -- STREAM_PROJECT  |PARTITIONED|
                    exchange [cardinality: 2.0, op-cost: 0.0, total-cost: 100.0]
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      data-scan []<-[$$21, $$DBLP1] <- test.DBLP1 condition (gt($$DBLP1.getField(1), "series")) limit 1 [cardinality: 2.0, op-cost: 100.0, total-cost: 100.0]
                      -- DATASOURCE_SCAN  |PARTITIONED|
                        exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
