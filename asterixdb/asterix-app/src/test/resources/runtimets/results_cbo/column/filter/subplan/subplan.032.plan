distribute result [$$70] [cardinality: 2.1, op-cost: 0.0, total-cost: 17.0]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange [cardinality: 2.1, op-cost: 0.0, total-cost: 17.0]
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    aggregate [$$70] <- [agg-sql-sum($$76)] [cardinality: 2.1, op-cost: 0.0, total-cost: 17.0]
    -- AGGREGATE  |UNPARTITIONED|
      exchange [cardinality: 2.1, op-cost: 0.0, total-cost: 17.0]
      -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
        aggregate [$$76] <- [agg-sql-count(1)] [cardinality: 2.1, op-cost: 0.0, total-cost: 17.0]
        -- AGGREGATE  |PARTITIONED|
          exchange [cardinality: 2.1, op-cost: 0.0, total-cost: 17.0]
          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
            join (true) [cardinality: 2.1, op-cost: 1.0, total-cost: 17.0]
            -- NESTED_LOOP  |PARTITIONED|
              exchange [cardinality: 1.0, op-cost: 0.0, total-cost: 6.0]
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                project ([]) [cardinality: 1.0, op-cost: 0.0, total-cost: 6.0]
                -- STREAM_PROJECT  |PARTITIONED|
                  select (eq($$p.getField("arrayOrObject").getField("text"), "7")) [cardinality: 1.0, op-cost: 0.0, total-cost: 6.0]
                  -- STREAM_SELECT  |PARTITIONED|
                    project ([$$p]) [cardinality: 6.0, op-cost: 0.0, total-cost: 6.0]
                    -- STREAM_PROJECT  |PARTITIONED|
                      assign [$$p] <- [$$b2] [cardinality: 6.0, op-cost: 0.0, total-cost: 6.0]
                      -- ASSIGN  |PARTITIONED|
                        exchange [cardinality: 6.0, op-cost: 0.0, total-cost: 6.0]
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          replicate [cardinality: 6.0, op-cost: 0.0, total-cost: 6.0]
                          -- REPLICATE  |PARTITIONED|
                            exchange [cardinality: 6.0, op-cost: 4.0, total-cost: 10.0]
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              project ([$$b2]) [cardinality: 6.0, op-cost: 0.0, total-cost: 6.0]
                              -- STREAM_PROJECT  |PARTITIONED|
                                exchange [cardinality: 6.0, op-cost: 4.0, total-cost: 10.0]
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  data-scan []<-[$$68, $$b2] <- test.ColumnDataset project ({arrayOrObject:<[{text:any}],{text:any}>}) filter on: or(eq($$b2.getField("arrayOrObject").getField("text"), "7"), eq(scan-collection($$b2.getField("arrayOrObject")).getField("text"), "1")) range-filter on: or(eq($$b2.getField("arrayOrObject").getField("text"), "7"), eq(scan-collection($$b2.getField("arrayOrObject")).getField("text"), "1")) [cardinality: 6.0, op-cost: 6.0, total-cost: 6.0]
                                  -- DATASOURCE_SCAN  |PARTITIONED|
                                    exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                      -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
              exchange [cardinality: 1.0, op-cost: 4.0, total-cost: 10.0]
              -- BROADCAST_EXCHANGE  |PARTITIONED|
                project ([]) [cardinality: 1.0, op-cost: 0.0, total-cost: 6.0]
                -- STREAM_PROJECT  |UNPARTITIONED|
                  select (neq($$69, 0)) [cardinality: 1.0, op-cost: 0.0, total-cost: 6.0]
                  -- STREAM_SELECT  |UNPARTITIONED|
                    aggregate [$$69] <- [agg-sum($$75)] [cardinality: 6.0, op-cost: 0.0, total-cost: 6.0]
                    -- AGGREGATE  |UNPARTITIONED|
                      exchange [cardinality: 6.0, op-cost: 4.0, total-cost: 10.0]
                      -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
                        aggregate [$$75] <- [agg-count(1)] [cardinality: 6.0, op-cost: 0.0, total-cost: 6.0]
                        -- AGGREGATE  |PARTITIONED|
                          select (eq($$ao.getField("text"), "1")) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- STREAM_SELECT  |PARTITIONED|
                            project ([$$ao]) [cardinality: 6.0, op-cost: 0.0, total-cost: 6.0]
                            -- STREAM_PROJECT  |PARTITIONED|
                              unnest $$ao <- scan-collection($$72) [cardinality: 6.0, op-cost: 0.0, total-cost: 6.0]
                              -- UNNEST  |PARTITIONED|
                                project ([$$72]) [cardinality: 6.0, op-cost: 0.0, total-cost: 6.0]
                                -- STREAM_PROJECT  |PARTITIONED|
                                  assign [$$72] <- [$$b2.getField("arrayOrObject")] [cardinality: 6.0, op-cost: 0.0, total-cost: 6.0]
                                  -- ASSIGN  |PARTITIONED|
                                    exchange [cardinality: 6.0, op-cost: 4.0, total-cost: 10.0]
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      replicate [cardinality: 6.0, op-cost: 0.0, total-cost: 6.0]
                                      -- REPLICATE  |PARTITIONED|
                                        exchange [cardinality: 6.0, op-cost: 4.0, total-cost: 10.0]
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          project ([$$b2]) [cardinality: 6.0, op-cost: 0.0, total-cost: 6.0]
                                          -- STREAM_PROJECT  |PARTITIONED|
                                            exchange [cardinality: 6.0, op-cost: 4.0, total-cost: 10.0]
                                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                              data-scan []<-[$$68, $$b2] <- test.ColumnDataset project ({arrayOrObject:<[{text:any}],{text:any}>}) filter on: or(eq($$b2.getField("arrayOrObject").getField("text"), "7"), eq(scan-collection($$b2.getField("arrayOrObject")).getField("text"), "1")) range-filter on: or(eq($$b2.getField("arrayOrObject").getField("text"), "7"), eq(scan-collection($$b2.getField("arrayOrObject")).getField("text"), "1")) [cardinality: 6.0, op-cost: 6.0, total-cost: 6.0]
                                              -- DATASOURCE_SCAN  |PARTITIONED|
                                                exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                  empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
