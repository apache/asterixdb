<!--
 ! Licensed to the Apache Software Foundation (ASF) under one
 ! or more contributor license agreements.  See the NOTICE file
 ! distributed with this work for additional information
 ! regarding copyright ownership.  The ASF licenses this file
 ! to you under the Apache License, Version 2.0 (the
 ! "License"); you may not use this file except in compliance
 ! with the License.  You may obtain a copy of the License at
 !
 !   http://www.apache.org/licenses/LICENSE-2.0
 !
 ! Unless required by applicable law or agreed to in writing,
 ! software distributed under the License is distributed on an
 ! "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ! KIND, either express or implied.  See the License for the
 ! specific language governing permissions and limitations
 ! under the License.
 !-->
<test-group name="objects">
  <test-case FilePath="objects">
    <compilation-unit name="access-nested-fields">
      <output-dir compare="Text">access-nested-fields</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="closed-object-constructor_01">
      <output-dir compare="Text">closed-object-constructor_01</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="closed-object-constructor_02">
      <output-dir compare="Text">closed-object-constructor_02</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="closed-object-constructor_03">
      <output-dir compare="Text">closed-object-constructor_03</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="expFieldName">
      <output-dir compare="Text">expFieldName</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="field-access-by-index_01">
      <output-dir compare="Text">field-access-by-index_01</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="field-access-on-open-field">
      <output-dir compare="Text">field-access-on-open-field</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects/get-object-fields">
    <compilation-unit name="documentation-example">
      <output-dir compare="Text">documentation-example</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects/get-object-fields">
      <compilation-unit name="tiny-social-example">
          <output-dir compare="Text">tiny-social-example</output-dir>
      </compilation-unit>
  </test-case>
  <test-case FilePath="objects/get-object-fields">
    <compilation-unit name="tiny-social-example-no-complex-types">
      <output-dir compare="Text">tiny-social-example-no-complex-types</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects/get-object-fields">
    <compilation-unit name="tiny-social-example-only-lists">
      <output-dir compare="Text">tiny-social-example-only-lists</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects/get-object-fields">
    <compilation-unit name="tiny-social-example-only-records">
      <output-dir compare="Text">tiny-social-example-only-records</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects/get-object-fields">
    <compilation-unit name="missing-fields">
      <output-dir compare="Text">missing-fields</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects/get-object-field-value">
    <compilation-unit name="documentation-example">
      <output-dir compare="Text">documentation-example</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects/get-object-field-value">
    <compilation-unit name="highly-nested-closed">
      <output-dir compare="Text">highly-nested-closed</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects/get-object-field-value">
    <compilation-unit name="highly-nested-mixed">
      <output-dir compare="Text">highly-nested-mixed</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects/get-object-field-value">
    <compilation-unit name="highly-nested-open">
      <output-dir compare="Text">highly-nested-open</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects/get-object-field-value">
    <compilation-unit name="tiny-social-example">
      <output-dir compare="Text">tiny-social-example</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects" check-warnings="true">
    <compilation-unit name="no_fieldname_constr">
      <output-dir compare="Text">no_fieldname_constr</output-dir>
      <expected-warn>Encountered a cross product join (in line 27, at column 22)</expected-warn>
      <expected-warn>Duplicate field name "a" (in line 31, at column 24)</expected-warn>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="no_fieldname_constr_negative">
      <output-dir compare="Text">no_fieldname_constr</output-dir>
      <expected-error>ASX1001: Syntax error: Cannot infer field name</expected-error>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="object_concat">
      <output-dir compare="Text">object_concat</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="object_length">
      <output-dir compare="Text">object_length</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="object_names">
      <output-dir compare="Text">object_names</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="object_remove">
      <output-dir compare="Text">object_remove</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="object_rename">
      <output-dir compare="Text">object_rename</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="object_unwrap">
      <output-dir compare="Text">object_unwrap</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="object_replace">
      <output-dir compare="Text">object_replace</output-dir>
      <source-location>false</source-location>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="object_add">
      <output-dir compare="Text">object_add</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="object_put">
      <output-dir compare="Text">object_put</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="object_values">
      <output-dir compare="Text">object_values</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="object_pairs">
      <output-dir compare="Text">object_pairs</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="object_pairs-2">
      <output-dir compare="Text">object_pairs-2</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="open-object-constructor_01">
      <output-dir compare="Text">open-object-constructor_01</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="open-object-constructor_02">
      <output-dir compare="Text">open-object-constructor_02</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects" check-warnings="true">
    <compilation-unit name="closed-closed-fieldname-conflict_issue173">
      <output-dir compare="Text">closed-closed-fieldname-conflict_issue173</output-dir>
      <expected-warn>Duplicate field name "name" (in line 30, at column 16)</expected-warn>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects" check-warnings="true">
    <compilation-unit name="open-closed-fieldname-conflict_issue173">
      <output-dir compare="Text">open-closed-fieldname-conflict_issue173</output-dir>
      <source-location>false</source-location>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects" check-warnings="true">
    <compilation-unit name="open-open-fieldname-conflict_issue173">
      <output-dir compare="Text">open-open-fieldname-conflict_issue173</output-dir>
      <source-location>false</source-location>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="pairs">
      <output-dir compare="Text">pairs</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects">
    <compilation-unit name="query-ASTERIXDB-2529">
      <output-dir compare="Text">query-ASTERIXDB-2529</output-dir>
    </compilation-unit>
  </test-case>
  <test-case FilePath="objects" check-warnings="true">
    <compilation-unit name="object_duplicate_fields">
      <output-dir compare="Text">object_duplicate_fields</output-dir>
      <expected-warn>Duplicate field name "name" (in line 27, at column 1)</expected-warn>
      <expected-warn>Duplicate field name "Name" (in line 29, at column 1)</expected-warn>
      <expected-warn>Duplicate field name "name" (in line 31, at column 1)</expected-warn>
      <expected-warn>Duplicate field name "name" (in line 22, at column 30)</expected-warn>
      <expected-warn>Duplicate field name "id" (in line 22, at column 56)</expected-warn>
      <expected-warn>Duplicate field name "f1" (in line 22, at column 70)</expected-warn>
      <expected-warn>Duplicate field name "id" (in line 22, at column 56)</expected-warn>
      <expected-warn>Duplicate field name "f1" (in line 22, at column 83)</expected-warn>
      <expected-warn>Duplicate field name "fname1" (in line 25, at column 45)</expected-warn>
    </compilation-unit>
  </test-case>
</test-group>
