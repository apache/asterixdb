/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

USE tpcds;

WITH
ssr AS (
  SELECT s.s_store_id,
        SUM(salesreturns.sales_price) AS sales,
        SUM(salesreturns.profit) AS profit,
        SUM(salesreturns.return_amt) AS returns,
        SUM(salesreturns.net_loss) AS profit_loss
  FROM (
    SELECT  ss_store_sk AS store_sk,
            ss_sold_date_sk  AS date_sk,
            ss_ext_sales_price AS sales_price,
            ss_net_profit AS profit,
            0 AS return_amt,
            0 AS net_loss
    FROM store_sales

    UNION ALL

    SELECT sr_store_sk AS store_sk,
           sr_returned_date_sk AS date_sk,
           0 AS sales_price,
           0 AS profit,
           sr_return_amt AS return_amt,
           sr_net_loss AS net_loss
    FROM store_returns
   ) salesreturns,
   date_dim d,
   store s
 WHERE salesreturns.date_sk = d.d_date_sk
   AND date(d.d_date) BETWEEN date('1998-01-01') AND (date('1998-01-01') + duration('P5Y'))
   AND salesreturns.store_sk = s.s_store_sk
 GROUP BY s.s_store_id
),

csr AS (
  SELECT cp.cp_catalog_page_id,
        SUM(salesreturns.sales_price) AS sales,
        SUM(salesreturns.profit) AS profit,
        SUM(salesreturns.return_amt) AS returns,
        SUM(salesreturns.net_loss) AS profit_loss
  FROM (
    SELECT  cs_catalog_page_sk AS page_sk,
            cs_sold_date_sk  AS date_sk,
            cs_ext_sales_price AS sales_price,
            cs_net_profit AS profit,
            0 AS return_amt,
            0 AS net_loss
    FROM catalog_sales

    UNION ALL

    SELECT cr_catalog_page_sk AS page_sk,
           cr_returned_date_sk AS date_sk,
           0 AS sales_price,
           0 AS profit,
           cr_return_amount AS return_amt,
           cr_net_loss AS net_loss
    FROM catalog_returns
   ) salesreturns,
   date_dim d,
   catalog_page cp
 WHERE salesreturns.date_sk = d.d_date_sk
   AND date(d.d_date) BETWEEN date('1998-01-01') AND (date('1998-01-01') + duration('P5Y'))
   AND salesreturns.page_sk = cp.cp_catalog_page_sk
 GROUP BY cp.cp_catalog_page_id
),

wsr AS (
  SELECT web.web_site_id,
         SUM(salesreturns.sales_price) AS sales,
         SUM(salesreturns.profit) AS profit,
         SUM(salesreturns.return_amt) AS returns,
         SUM(salesreturns.net_loss) AS profit_loss
  FROM (
    SELECT  ws_web_site_sk AS wsr_web_site_sk,
             ws_sold_date_sk  AS date_sk,
             ws_ext_sales_price AS sales_price,
             ws_net_profit AS profit,
             0 AS return_amt,
             0 AS net_loss
    FROM web_sales

    UNION ALL

    SELECT  ws.ws_web_site_sk AS wsr_web_site_sk,
            wr.wr_returned_date_sk AS date_sk,
            0 AS sales_price,
            0 AS profit,
            wr.wr_return_amt AS return_amt,
            wr.wr_net_loss AS net_loss
     FROM web_returns wr LEFT OUTER JOIN web_sales ws
      ON ( wr.wr_item_sk = ws.ws_item_sk AND wr.wr_order_number = ws.ws_order_number)
    ) salesreturns,
    date_dim d,
    web_site web
  WHERE salesreturns.date_sk = d.d_date_sk
    AND date(d.d_date) BETWEEN date('1998-01-01') AND (date('1998-01-01') + duration('P5Y'))
    AND salesreturns.wsr_web_site_sk = web.web_site_sk
  GROUP BY web.web_site_id
)

SELECT  channel, id,
        ROUND(SUM(sales), 2) AS sales,
        ROUND(SUM(returns), 2) AS returns,
        ROUND(SUM(profit), 2) AS profit
FROM (
  SELECT  'store channel' AS channel,
          'store' || s_store_id AS id,
          sales,
          returns,
          (profit - profit_loss) AS profit
  FROM ssr

  UNION ALL

  SELECT  'catalog channel' AS channel,
          'catalog_page' || cp_catalog_page_id AS id,
          sales,
          returns,
          (profit - profit_loss) AS profit
 FROM csr

 UNION ALL

 SELECT   'web channel' AS channel,
          'web_site' || web_site_id AS id,
          sales,
          returns,
          (profit - profit_loss) AS profit
 FROM wsr
) x
GROUP BY ROLLUP (channel, id)
ORDER BY channel, id
LIMIT 100;
