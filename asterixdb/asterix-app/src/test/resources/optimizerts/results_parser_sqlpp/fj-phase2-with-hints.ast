DataverseUse fuzzyjoin_078
TypeDecl DBLPType [
  open RecordType {
    id : integer,
    dblpid : string,
    title : string,
    authors : string,
    misc : string
  }
]
DatasetDecl DBLP_fuzzyjoin_078(DBLPType) partitioned by [[id]]
WriteOutputTo asterix_nc1:rttest/fuzzyjoin_078.adm
Query:
SELECT ELEMENT [
RecordConstructor [
  (
    LiteralExpr [STRING] [id]
    :
    FieldAccessor [
      Variable [ Name=$paperDBLP ]
      Field=id
    ]
  )
  (
    LiteralExpr [STRING] [tokens]
    :
    Variable [ Name=$tokensDBLP ]
  )
]
]
FROM [  FunctionCall asterix.dataset@1[
    LiteralExpr [STRING] [fuzzyjoin_078.DBLP_fuzzyjoin_078]
  ]
  AS Variable [ Name=$paperDBLP ]
]
Let Variable [ Name=$unrankedTokensDBLP ]
  :=
  FunctionCall asterix.counthashed-word-tokens@1[
    FieldAccessor [
      Variable [ Name=$paperDBLP ]
      Field=title
    ]
  ]
Let Variable [ Name=$tokensDBLP ]
  :=
  (
    SELECT ELEMENT [
    Variable [ Name=$i ]
    ]
    FROM [      Variable [ Name=$unrankedTokensDBLP ]
      AS Variable [ Name=$token ]
,
      (
        SELECT ELEMENT [
        Variable [ Name=$tokenGroupped ]
        ]
        FROM [          FunctionCall asterix.dataset@1[
            LiteralExpr [STRING] [fuzzyjoin_078.DBLP_fuzzyjoin_078]
          ]
          AS Variable [ Name=$paper ]
,
          FunctionCall asterix.counthashed-word-tokens@1[
            FieldAccessor [
              Variable [ Name=$paper ]
              Field=title
            ]
          ]
          AS Variable [ Name=$token ]
        ]
        Groupby
          Variable [ Name=$tokenGroupped ]
          :=
          Variable [ Name=$token ]
          GROUP AS Variable [ Name=#1 ]
          (
            paper:=Variable [ Name=$paper ]
            token:=Variable [ Name=$token ]
          )

        Orderby
          FunctionCall asterix.sql-count@1[
            (
              SELECT ELEMENT [
              FieldAccessor [
                Variable [ Name=#2 ]
                Field=paper
              ]
              ]
              FROM [                Variable [ Name=#1 ]
                AS Variable [ Name=#2 ]
              ]
            )
          ]
          ASC
          Variable [ Name=$tokenGroupped ]
          ASC

      )
      AS Variable [ Name=$tokenRanked ]
 AT
Variable [ Name=$i ]
    ]
    Where
      OperatorExpr [
        Variable [ Name=$token ]
        =
        Variable [ Name=$tokenRanked ]
      ]
    Orderby
      Variable [ Name=$i ]
      ASC

  )
Orderby
  FieldAccessor [
    Variable [ Name=$paperDBLP ]
    Field=id
  ]
  ASC

