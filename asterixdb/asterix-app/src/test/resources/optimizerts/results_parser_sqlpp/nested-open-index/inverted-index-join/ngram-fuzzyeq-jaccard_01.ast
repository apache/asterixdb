DataverseUse test
Set import-private-functions=true
TypeDecl DBLPTypetmp [
  open RecordType {
    id : integer,
    dblpid : string,
    authors : string,
    misc : string
  }
]
TypeDecl CSXTypetmp [
  closed RecordType {
    id : integer,
    csxid : string,
    title : string,
    authors : string,
    misc : string
  }
]
TypeDecl DBLPType [
  closed RecordType {
    nested : DBLPTypetmp
  }
]
TypeDecl CSXType [
  closed RecordType {
    nested : CSXTypetmp
  }
]
DatasetDecl DBLP(DBLPType) partitioned by [[nested, id]]
DatasetDecl CSX(CSXType) partitioned by [[nested, id]]
WriteOutputTo asterix_nc1:rttest/inverted-index-join_ngram-fuzzyeq-jaccard_01.adm
Set simfunction=jaccard
Set simthreshold=0.5f
Query:
SELECT ELEMENT [
RecordConstructor [
  (
    LiteralExpr [STRING] [arec]
    :
    Variable [ Name=$a ]
  )
  (
    LiteralExpr [STRING] [brec]
    :
    Variable [ Name=$b ]
  )
]
]
FROM [  FunctionCall asterix.dataset@1[
    LiteralExpr [STRING] [test.DBLP]
  ]
  AS Variable [ Name=$a ]
,
  FunctionCall asterix.dataset@1[
    LiteralExpr [STRING] [test.CSX]
  ]
  AS Variable [ Name=$b ]
]
Where
  OperatorExpr [
    OperatorExpr [
      FunctionCall asterix.gram-tokens@3[
        FieldAccessor [
          FieldAccessor [
            Variable [ Name=$a ]
            Field=nested
          ]
          Field=title
        ]
        LiteralExpr [LONG] [3]
        LiteralExpr [FALSE]
      ]
      ~=
      FunctionCall asterix.gram-tokens@3[
        FieldAccessor [
          FieldAccessor [
            Variable [ Name=$b ]
            Field=nested
          ]
          Field=title
        ]
        LiteralExpr [LONG] [3]
        LiteralExpr [FALSE]
      ]
    ]
    and
    OperatorExpr [
      FieldAccessor [
        FieldAccessor [
          Variable [ Name=$a ]
          Field=nested
        ]
        Field=id
      ]
      <
      FieldAccessor [
        FieldAccessor [
          Variable [ Name=$b ]
          Field=nested
        ]
        Field=id
      ]
    ]
  ]
