DataverseUse fuzzyjoin
TypeDecl DBLPType [
  open RecordType {
    id : integer,
    dblpid : string,
    title : string,
    authors : string,
    misc : string
  }
]
DatasetDecl DBLP(DBLPType) partitioned by [[id]]
Set import-private-functions=true
Query:
SELECT ELEMENT [
RecordConstructor [
  (
    LiteralExpr [STRING] [left]
    :
    Variable [ Name=$paperLeft ]
  )
  (
    LiteralExpr [STRING] [right]
    :
    Variable [ Name=$paperRight ]
  )
  (
    LiteralExpr [STRING] [sim]
    :
    FieldAccessor [
      Variable [ Name=$ridpair ]
      Field=sim
    ]
  )
]
]
FROM [  FunctionCall asterix.dataset@1[
    LiteralExpr [STRING] [fuzzyjoin.DBLP]
  ]
  AS Variable [ Name=$paperLeft ]
,
  FunctionCall asterix.dataset@1[
    LiteralExpr [STRING] [fuzzyjoin.DBLP]
  ]
  AS Variable [ Name=$paperRight ]
,
  (
    SELECT ELEMENT [
    RecordConstructor [
      (
        LiteralExpr [STRING] [idLeft]
        :
        Variable [ Name=$idLeft ]
      )
      (
        LiteralExpr [STRING] [idRight]
        :
        Variable [ Name=$idRight ]
      )
      (
        LiteralExpr [STRING] [sim]
        :
        IndexAccessor [
          FieldAccessor [
            IndexAccessor [
              Variable [ Name=$g ]
              Index:               LiteralExpr [LONG] [0]
            ]
            Field=sim
          ]
          Index:           LiteralExpr [LONG] [0]
        ]
      )
    ]
    ]
    FROM [      FunctionCall asterix.dataset@1[
        LiteralExpr [STRING] [fuzzyjoin.DBLP]
      ]
      AS Variable [ Name=$paperLeft ]
,
      FunctionCall asterix.subset-collection@3[
        FunctionCall asterix.dataset@1[
          LiteralExpr [STRING] [fuzzyjoin.tokensLeft]
        ]
        LiteralExpr [LONG] [0]
        FunctionCall asterix.prefix-len-jaccard@2[
          FunctionCall asterix.dataset@1[
            LiteralExpr [STRING] [fuzzyjoin.lenLeft]
          ]
          LiteralExpr [FLOAT] [0.5]
        ]
      ]
      AS Variable [ Name=$prefixTokenLeft ]
,
      FunctionCall asterix.dataset@1[
        LiteralExpr [STRING] [fuzzyjoin.DBLP]
      ]
      AS Variable [ Name=$paperRight ]
,
      FunctionCall asterix.subset-collection@3[
        FunctionCall asterix.dataset@1[
          LiteralExpr [STRING] [fuzzyjoin.tokensRight]
        ]
        LiteralExpr [LONG] [0]
        FunctionCall asterix.prefix-len-jaccard@2[
          FunctionCall asterix.dataset@1[
            LiteralExpr [STRING] [fuzzyjoin.lenRight]
          ]
          LiteralExpr [FLOAT] [0.5]
        ]
      ]
      AS Variable [ Name=$prefixTokenRight ]
    ]
    Let Variable [ Name=$lenLeft ]
      :=
      FunctionCall asterix.len@1[
        FunctionCall asterix.counthashed-word-tokens@1[
          FieldAccessor [
            Variable [ Name=$paperLeft ]
            Field=title
          ]
        ]
      ]
    Let Variable [ Name=$tokensLeft ]
      :=
      (
        SELECT ELEMENT [
        Variable [ Name=$i ]
        ]
        FROM [          FunctionCall asterix.counthashed-word-tokens@1[
            FieldAccessor [
              Variable [ Name=$paperLeft ]
              Field=title
            ]
          ]
          AS Variable [ Name=$tokenUnranked ]
,
          (
            SELECT ELEMENT [
            Variable [ Name=$tokenGroupped ]
            ]
            FROM [              FunctionCall asterix.dataset@1[
                LiteralExpr [STRING] [fuzzyjoin.DBLP]
              ]
              AS Variable [ Name=$paper ]
,
              FunctionCall asterix.counthashed-word-tokens@1[
                FieldAccessor [
                  Variable [ Name=$paper ]
                  Field=title
                ]
              ]
              AS Variable [ Name=$token ]
            ]
            Groupby
              Variable [ Name=$tokenGroupped ]
              :=
              Variable [ Name=$token ]
              GROUP AS Variable [ Name=#1 ]
              (
                paper:=Variable [ Name=$paper ]
                token:=Variable [ Name=$token ]
              )

            Orderby
              FunctionCall asterix.sql-count@1[
                (
                  SELECT ELEMENT [
                  FieldAccessor [
                    Variable [ Name=#3 ]
                    Field=paper
                  ]
                  ]
                  FROM [                    Variable [ Name=#1 ]
                    AS Variable [ Name=#3 ]
                  ]
                )
              ]
              ASC
              Variable [ Name=$tokenGroupped ]
              ASC

          )
          AS Variable [ Name=$tokenRanked ]
 AT
Variable [ Name=$i ]
        ]
        Where
          OperatorExpr [
            Variable [ Name=$tokenUnranked ]
            =
            Variable [ Name=$tokenRanked ]
          ]
        Orderby
          Variable [ Name=$i ]
          ASC

      )
    Let Variable [ Name=$lenRight ]
      :=
      FunctionCall asterix.len@1[
        FunctionCall asterix.counthashed-word-tokens@1[
          FieldAccessor [
            Variable [ Name=$paperRight ]
            Field=title
          ]
        ]
      ]
    Let Variable [ Name=$tokensRight ]
      :=
      (
        SELECT ELEMENT [
        Variable [ Name=$i ]
        ]
        FROM [          FunctionCall asterix.counthashed-word-tokens@1[
            FieldAccessor [
              Variable [ Name=$paperRight ]
              Field=title
            ]
          ]
          AS Variable [ Name=$tokenUnranked ]
,
          (
            SELECT ELEMENT [
            Variable [ Name=$tokenGroupped ]
            ]
            FROM [              FunctionCall asterix.dataset@1[
                LiteralExpr [STRING] [fuzzyjoin.DBLP]
              ]
              AS Variable [ Name=$paper ]
,
              FunctionCall asterix.counthashed-word-tokens@1[
                FieldAccessor [
                  Variable [ Name=$paper ]
                  Field=title
                ]
              ]
              AS Variable [ Name=$token ]
            ]
            Groupby
              Variable [ Name=$tokenGroupped ]
              :=
              Variable [ Name=$token ]
              GROUP AS Variable [ Name=#2 ]
              (
                paper:=Variable [ Name=$paper ]
                token:=Variable [ Name=$token ]
              )

            Orderby
              FunctionCall asterix.sql-count@1[
                (
                  SELECT ELEMENT [
                  FieldAccessor [
                    Variable [ Name=#4 ]
                    Field=paper
                  ]
                  ]
                  FROM [                    Variable [ Name=#2 ]
                    AS Variable [ Name=#4 ]
                  ]
                )
              ]
              ASC
              Variable [ Name=$tokenGroupped ]
              ASC

          )
          AS Variable [ Name=$tokenRanked ]
 AT
Variable [ Name=$i ]
        ]
        Where
          OperatorExpr [
            Variable [ Name=$tokenUnranked ]
            =
            Variable [ Name=$tokenRanked ]
          ]
        Orderby
          Variable [ Name=$i ]
          ASC

      )
    Let Variable [ Name=$sim ]
      :=
      FunctionCall asterix.similarity-jaccard-prefix@6[
        Variable [ Name=$lenLeft ]
        Variable [ Name=$tokensLeft ]
        Variable [ Name=$lenRight ]
        Variable [ Name=$tokensRight ]
        Variable [ Name=$prefixTokenLeft ]
        LiteralExpr [FLOAT] [0.5]
      ]
    Where
      OperatorExpr [
        OperatorExpr [
          Variable [ Name=$prefixTokenLeft ]
          =
          Variable [ Name=$prefixTokenRight ]
        ]
        and
        OperatorExpr [
          OperatorExpr [
            Variable [ Name=$sim ]
            >=
            LiteralExpr [FLOAT] [0.5]
          ]
          and
          OperatorExpr [
            FieldAccessor [
              Variable [ Name=$paperLeft ]
              Field=id
            ]
            <
            FieldAccessor [
              Variable [ Name=$paperRight ]
              Field=id
            ]
          ]
        ]
      ]
    Groupby
      Variable [ Name=$idLeft ]
      :=
      FieldAccessor [
        Variable [ Name=$paperLeft ]
        Field=id
      ]
      Variable [ Name=$idRight ]
      :=
      FieldAccessor [
        Variable [ Name=$paperRight ]
        Field=id
      ]
      GROUP AS Variable [ Name=$g ]
      (
        sim:=Variable [ Name=$sim ]
      )

  )
  AS Variable [ Name=$ridpair ]
]
Where
  OperatorExpr [
    OperatorExpr [
      FieldAccessor [
        Variable [ Name=$ridpair ]
        Field=idLeft
      ]
      =
      FieldAccessor [
        Variable [ Name=$paperLeft ]
        Field=id
      ]
    ]
    and
    OperatorExpr [
      FieldAccessor [
        Variable [ Name=$ridpair ]
        Field=idRight
      ]
      =
      FieldAccessor [
        Variable [ Name=$paperRight ]
        Field=id
      ]
    ]
  ]
Orderby
  FieldAccessor [
    Variable [ Name=$paperLeft ]
    Field=id
  ]
  ASC
  FieldAccessor [
    Variable [ Name=$paperRight ]
    Field=id
  ]
  ASC

