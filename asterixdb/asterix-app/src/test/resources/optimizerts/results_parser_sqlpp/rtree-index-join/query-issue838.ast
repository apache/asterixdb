DataverseUse twitter
TypeDecl TweetMessageType [
  closed RecordType {
    tweetid : bigint,
    sender-location : point,
    text : string
  }
]
TypeDecl TweetHistorySubscription [
  open RecordType {
    subscription-id : integer,
    location : point
  }
]
DatasetDecl TweetHistorySubscriptions(TweetHistorySubscription) partitioned by [[subscription-id]]
DatasetDecl TweetMessages(TweetMessageType) partitioned by [[tweetid]]
WriteOutputTo asterix_nc1:rttest/query-issue838.adm
Query:
SELECT ELEMENT [
RecordConstructor [
  (
    LiteralExpr [STRING] [subscription-id]
    :
    FieldAccessor [
      Variable [ Name=$sub ]
      Field=subscription-id
    ]
  )
  (
    LiteralExpr [STRING] [changeSet]
    :
    LiteralExpr [LONG] [1]
  )
  (
    LiteralExpr [STRING] [execution-time]
    :
    FunctionCall asterix.current-datetime@0[
    ]
  )
  (
    LiteralExpr [STRING] [message-text]
    :
    Variable [ Name=$text ]
  )
]
]
FROM [  FunctionCall asterix.dataset@1[
    LiteralExpr [STRING] [twitter.TweetHistorySubscriptions]
  ]
  AS Variable [ Name=$sub ]
,
  (
    SELECT ELEMENT [
    Variable [ Name=$tweet ]
    ]
    FROM [      FunctionCall asterix.dataset@1[
        LiteralExpr [STRING] [twitter.TweetMessages]
      ]
      AS Variable [ Name=$tweet ]
    ]
    Let Variable [ Name=$circle ]
      :=
      FunctionCall asterix.create-circle@2[
        FieldAccessor [
          Variable [ Name=$tweet ]
          Field=location
        ]
        LiteralExpr [DOUBLE] [30.0]
      ]
    Where
      FunctionCall asterix.spatial-intersect@2[
        FieldAccessor [
          Variable [ Name=$tweet ]
          Field=sender-location
        ]
        Variable [ Name=$circle ]
      ]
  )
  AS Variable [ Name=$text ]
]
Let Variable [ Name=$location ]
  :=
  FieldAccessor [
    Variable [ Name=$sub ]
    Field=location
  ]
