/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */


--  This Test is intended to test the IPartitioningRequirementsCoordinator for outer join
--  in the case where the first delivered properties: (a_1, a_0, a_2)
--  with join condition a_0=b_0, a_1=b_1, a_2=b_2 and equivalence mapping a_0=a_1
--  the expected final required properties of B will be: (b_0, b_1, b_2) which should be okay.

drop dataverse test if exists;
create dataverse test;
use test;

CREATE TYPE A_TYPE AS {a_0 : integer, a_1 : integer, a_2 : integer};
CREATE DATASET A(A_TYPE) PRIMARY KEY a_0, a_1, a_2;

CREATE TYPE B_TYPE AS {b_0 : integer, b_1 : integer, b_2 : integer};
CREATE DATASET B(B_TYPE) PRIMARY KEY b_0, b_1, b_2;



SELECT A.a_0, A.a_1, A.a_2, A.a_3, B.b_3
FROM  A  LEFT OUTER JOIN B   ON (
    A.a_0  = B.b_0
        AND B.b_1 = A.a_1
        AND A.a_2 = B.b_2)
WHERE  A.a_0=A.a_2;