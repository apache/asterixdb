/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/*
 * Description: Test that listify() is eliminated
 *              on the right side of an outer join
 */

DROP DATAVERSE test IF EXISTS;
CREATE DATAVERSE test;

USE test;

CREATE TYPE tasksType AS {
  id : integer
};

CREATE DATASET tasks(tasksType) PRIMARY KEY id;

SELECT t0.taskId, t0.cnt_all, t1.cnt_x, t2.cnt_y, t3.cnt_z
FROM (
  SELECT taskId, COUNT(1) AS cnt_all FROM tasks GROUP BY taskId ORDER BY taskId
) AS t0
LEFT OUTER JOIN (
  SELECT taskId, COUNT(1) AS cnt_x FROM tasks WHERE status="x" GROUP BY taskId
) AS t1 ON t0.taskId = t1.taskId
LEFT OUTER JOIN (
  SELECT taskId, COUNT(1) AS cnt_y FROM tasks WHERE status="y" GROUP BY taskId
) AS t2 ON t0.taskId = t2.taskId
LEFT OUTER JOIN (
  SELECT taskId, COUNT(1) AS cnt_z FROM tasks WHERE status="z" GROUP BY taskId
) AS t3 ON t0.taskId = t3.taskId
ORDER BY t0.taskId;
