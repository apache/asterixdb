distribute result [$$55]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    project ([$$55])
    -- STREAM_PROJECT  |PARTITIONED|
      assign [$$55] <- [{"tweet": $$65, "similar-tweets": $$54}]
      -- ASSIGN  |PARTITIONED|
        exchange
        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
          group by ([$$65 := $$57]) decor ([]) {
                    aggregate [$$54] <- [listify($$58)]
                    -- AGGREGATE  |LOCAL|
                      select (not(is-missing($$58)))
                      -- STREAM_SELECT  |LOCAL|
                        nested tuple source
                        -- NESTED_TUPLE_SOURCE  |LOCAL|
                 }
          -- PRE_CLUSTERED_GROUP_BY[$$57]  |PARTITIONED|
            exchange
            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
              order (ASC, $$57)
              -- STABLE_SORT [$$57(ASC)]  |PARTITIONED|
                exchange
                -- HASH_PARTITION_EXCHANGE [$$57]  |PARTITIONED|
                  project ([$$58, $$57])
                  -- STREAM_PROJECT  |PARTITIONED|
                    exchange
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      join (eq($$68, $$57))
                      -- HYBRID_HASH_JOIN [$$68][$$57]  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          project ([$$68])
                          -- STREAM_PROJECT  |PARTITIONED|
                            select (and(ge($$56, datetime: { 2011-06-18T14:10:17.000 }), lt($$56, datetime: { 2011-06-18T15:10:17.000 })))
                            -- STREAM_SELECT  |PARTITIONED|
                              project ([$$68, $$56])
                              -- STREAM_PROJECT  |PARTITIONED|
                                assign [$$56] <- [$$t.getField(3)]
                                -- ASSIGN  |PARTITIONED|
                                  exchange
                                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                    data-scan []<-[$$68, $$t] <- test.TweetMessages
                                    -- DATASOURCE_SCAN  |PARTITIONED|
                                      exchange
                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                        empty-tuple-source
                                        -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                        exchange
                        -- HASH_PARTITION_EXCHANGE [$$57]  |PARTITIONED|
                          project ([$$58, $$57])
                          -- STREAM_PROJECT  |PARTITIONED|
                            select (and(neq($$58, $$57), get-item(similarity-jaccard-check($$61, $$t2.getField(4), 0.6), 0))) retain-untrue ($$58 <- missing)
                            -- STREAM_SELECT  |PARTITIONED|
                              project ([$$57, $$61, $$58, $$t2])
                              -- STREAM_PROJECT  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  left-outer-unnest-map [$$58, $$t2] <- index-search("TweetMessages", 0, "test", "TweetMessages", true, false, 1, $$71, 1, $$71, true, true, true)
                                  -- BTREE_SEARCH  |PARTITIONED|
                                    exchange
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      order (ASC, $$71)
                                      -- STABLE_SORT [$$71(ASC)]  |PARTITIONED|
                                        exchange
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          left-outer-unnest-map [$$71] <- index-search("topicIIx", 4, "test", "TweetMessages", true, true, 1, 0.6, 22, false, 1, $$61)
                                          -- LENGTH_PARTITIONED_INVERTED_INDEX_SEARCH  |PARTITIONED|
                                            exchange
                                            -- BROADCAST_EXCHANGE  |PARTITIONED|
                                              project ([$$57, $$61])
                                              -- STREAM_PROJECT  |PARTITIONED|
                                                select (and(ge($$69, datetime: { 2011-06-18T14:10:17.000 }), lt($$69, datetime: { 2011-06-18T15:10:17.000 })))
                                                -- STREAM_SELECT  |PARTITIONED|
                                                  project ([$$57, $$61, $$69])
                                                  -- STREAM_PROJECT  |PARTITIONED|
                                                    assign [$$61, $$69] <- [$$70.getField(4), $$70.getField(3)]
                                                    -- ASSIGN  |PARTITIONED|
                                                      exchange
                                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                        data-scan []<-[$$57, $$70] <- test.TweetMessages
                                                        -- DATASOURCE_SCAN  |PARTITIONED|
                                                          exchange
                                                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                            empty-tuple-source
                                                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
