distribute result [$$33]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    assign [$$33] <- [{"arec": $$a, "brec": $$b}] project: [$$33]
    -- ASSIGN  |PARTITIONED|
      project ([$$a, $$b])
      -- STREAM_PROJECT  |PARTITIONED|
        exchange
        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
          join (eq($$42, $$34))
          -- HYBRID_HASH_JOIN [$$42][$$34]  |PARTITIONED|
            exchange
            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
              data-scan []<-[$$42, $$a] <- test.Customers
              -- DATASOURCE_SCAN  |PARTITIONED|
                exchange
                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                  empty-tuple-source
                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
            exchange
            -- HASH_PARTITION_EXCHANGE [$$34]  |PARTITIONED|
              union ($$b, $$45, $$b) ($$34, $$34, $$34)
              -- UNION_ALL  |PARTITIONED|
                exchange
                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                  select (and(lt($$34, $$35), get-item(edit-distance-check($$38, $$b.getField(4), 3), 0))) project: [$$b, $$34]
                  -- STREAM_SELECT  |PARTITIONED|
                    project ([$$34, $$38, $$35, $$b])
                    -- STREAM_PROJECT  |PARTITIONED|
                      exchange
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        unnest-map [$$35, $$b] <- index-search("Customers2", 0, "Default", "test", "Customers2", true, false, 1, $$47, 1, $$47, true, true, true)
                        -- BTREE_SEARCH  |PARTITIONED|
                          exchange
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            order (ASC, $$47)
                            -- STABLE_SORT [$$47(ASC)]  |PARTITIONED|
                              exchange
                              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                unnest-map [$$47] <- index-search("interests_index", 4, "Default", "test", "Customers2", true, true, 2, 3, 21, false, 1, $$38)
                                -- LENGTH_PARTITIONED_INVERTED_INDEX_SEARCH  |PARTITIONED|
                                  exchange
                                  -- BROADCAST_EXCHANGE  |PARTITIONED|
                                    select (edit-distance-list-is-filterable($$38, 3))
                                    -- STREAM_SELECT  |PARTITIONED|
                                      exchange
                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                        replicate
                                        -- REPLICATE  |PARTITIONED|
                                          exchange
                                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                            assign [$$38] <- [$$43.getField(4)] project: [$$34, $$38]
                                            -- ASSIGN  |PARTITIONED|
                                              exchange
                                              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                data-scan []<-[$$34, $$43] <- test.Customers
                                                -- DATASOURCE_SCAN  |PARTITIONED|
                                                  exchange
                                                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                    empty-tuple-source
                                                    -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                exchange
                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                  project ([$$45, $$34])
                  -- STREAM_PROJECT  |PARTITIONED|
                    exchange
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      join (and(lt($$34, $$46), get-item(edit-distance-check($$38, $$44, 3), 0)))
                      -- NESTED_LOOP  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          assign [$$44] <- [$$45.getField(4)]
                          -- ASSIGN  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              data-scan []<-[$$46, $$45] <- test.Customers2
                              -- DATASOURCE_SCAN  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  empty-tuple-source
                                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                        exchange
                        -- BROADCAST_EXCHANGE  |PARTITIONED|
                          select (not(edit-distance-list-is-filterable($$38, 3)))
                          -- STREAM_SELECT  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              replicate
                              -- REPLICATE  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  assign [$$38] <- [$$43.getField(4)] project: [$$34, $$38]
                                  -- ASSIGN  |PARTITIONED|
                                    exchange
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      data-scan []<-[$$34, $$43] <- test.Customers
                                      -- DATASOURCE_SCAN  |PARTITIONED|
                                        exchange
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          empty-tuple-source
                                          -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
