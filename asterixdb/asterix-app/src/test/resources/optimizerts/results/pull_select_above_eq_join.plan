distribute result [$$35]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    assign [$$35] <- [{"uid": $$36, "vid": $$37}] project: [$$35]
    -- ASSIGN  |PARTITIONED|
      select (neq($$38, $$39)) project: [$$36, $$37]
      -- STREAM_SELECT  |PARTITIONED|
        project ([$$36, $$38, $$37, $$39])
        -- STREAM_PROJECT  |PARTITIONED|
          exchange
          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
            join (eq($$40, $$41))
            -- HYBRID_HASH_JOIN [$$40][$$41]  |PARTITIONED|
              exchange
              -- HASH_PARTITION_EXCHANGE [$$40]  |PARTITIONED|
                assign [$$40, $$38] <- [$$user.getField(1), $$user.getField(2)] project: [$$36, $$38, $$40]
                -- ASSIGN  |PARTITIONED|
                  exchange
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    data-scan []<-[$$36, $$user] <- `pull-select-above-eq-join`.Users
                    -- DATASOURCE_SCAN  |PARTITIONED|
                      exchange
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        empty-tuple-source
                        -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
              exchange
              -- HASH_PARTITION_EXCHANGE [$$41]  |PARTITIONED|
                assign [$$41, $$39] <- [$$visitor.getField(1), $$visitor.getField(2)] project: [$$37, $$39, $$41]
                -- ASSIGN  |PARTITIONED|
                  exchange
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    data-scan []<-[$$37, $$visitor] <- `pull-select-above-eq-join`.Visitors
                    -- DATASOURCE_SCAN  |PARTITIONED|
                      exchange
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        empty-tuple-source
                        -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
