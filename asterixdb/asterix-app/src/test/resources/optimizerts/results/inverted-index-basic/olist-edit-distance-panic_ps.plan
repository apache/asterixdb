distribute result [$$c]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    project ([$$c])
    -- STREAM_PROJECT  |PARTITIONED|
      exchange
      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
        order (ASC, $$17)
        -- STABLE_SORT [$$17(ASC)]  |PARTITIONED|
          exchange
          -- RANGE_PARTITION_EXCHANGE [$$17(ASC)]  |PARTITIONED|
            forward: shared-variable = $$22
            -- FORWARD  |PARTITIONED|
              exchange
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                replicate
                -- REPLICATE  |PARTITIONED|
                  exchange
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    select (get-item(edit-distance-check($$c.getField(4), array: [ "computers", "wine", "walking" ], 3), 0))
                    -- STREAM_SELECT  |PARTITIONED|
                      exchange
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        data-scan []<-[$$17, $$c] <- test.Customers
                        -- DATASOURCE_SCAN  |PARTITIONED|
                          exchange
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            empty-tuple-source
                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
              exchange
              -- BROADCAST_EXCHANGE  |PARTITIONED|
                aggregate [$$22] <- [agg-range-map($$20, $$21)]
                -- AGGREGATE  |UNPARTITIONED|
                  exchange
                  -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
                    aggregate [$$20, $$21] <- [agg-local-sampling($$17), agg-null-writer($$17)]
                    -- AGGREGATE  |PARTITIONED|
                      project ([$$17])
                      -- STREAM_PROJECT  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          replicate
                          -- REPLICATE  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              select (get-item(edit-distance-check($$c.getField(4), array: [ "computers", "wine", "walking" ], 3), 0))
                              -- STREAM_SELECT  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  data-scan []<-[$$17, $$c] <- test.Customers
                                  -- DATASOURCE_SCAN  |PARTITIONED|
                                    exchange
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      empty-tuple-source
                                      -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
