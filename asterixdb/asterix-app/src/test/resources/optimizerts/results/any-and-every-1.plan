distribute result [$$28]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    project ([$$28])
    -- STREAM_PROJECT  |PARTITIONED|
      assign [$$28] <- [{"D": $$D}]
      -- ASSIGN  |PARTITIONED|
        project ([$$D])
        -- STREAM_PROJECT  |PARTITIONED|
          select (and($$24, eq($$25, 0)))
          -- STREAM_SELECT  |PARTITIONED|
            project ([$$D, $$24, $$25])
            -- STREAM_PROJECT  |PARTITIONED|
              subplan {
                        aggregate [$$24, $$25] <- [non-empty-stream(), agg-sql-count(switch-case(eq($$I, 1), true, null, true))]
                        -- AGGREGATE  |LOCAL|
                          unnest $$I <- scan-collection($$30)
                          -- UNNEST  |LOCAL|
                            nested tuple source
                            -- NESTED_TUPLE_SOURCE  |LOCAL|
                     }
              -- SUBPLAN  |PARTITIONED|
                assign [$$30] <- [$$D.getField("items")]
                -- ASSIGN  |PARTITIONED|
                  project ([$$D])
                  -- STREAM_PROJECT  |PARTITIONED|
                    exchange
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      data-scan []<-[$$29, $$D] <- TestDataverse.Dataset1
                      -- DATASOURCE_SCAN  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          empty-tuple-source
                          -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
