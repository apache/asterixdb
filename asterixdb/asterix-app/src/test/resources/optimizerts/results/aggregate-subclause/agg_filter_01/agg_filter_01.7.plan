distribute result [$$179]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    project ([$$179])
    -- STREAM_PROJECT  |UNPARTITIONED|
      assign [$$179] <- [{"twenty": $$twenty, "sm": $$186, "sm_sm": $$190, "sm_sm_where_twenty_lt_10": $$191, "sm_sm_where_sm_lt_3k": $$192}]
      -- ASSIGN  |UNPARTITIONED|
        project ([$$twenty, $$186, $$190, $$191, $$192])
        -- STREAM_PROJECT  |UNPARTITIONED|
          window-aggregate [] <- [] order (ASC, $$twenty) frame on (ASC, $$twenty) start unbounded end [$$twenty] {
                    aggregate [$$192] <- [agg-sql-sum($$185)]
                    -- AGGREGATE  |UNPARTITIONED|
                      select (lt($$184, 3000))
                      -- STREAM_SELECT  |UNPARTITIONED|
                        nested tuple source
                        -- NESTED_TUPLE_SOURCE  |UNPARTITIONED|
                 }
          -- WINDOW  |UNPARTITIONED|
            project ([$$twenty, $$186, $$190, $$191, $$185, $$184])
            -- STREAM_PROJECT  |UNPARTITIONED|
              window-aggregate [] <- [] order (ASC, $$twenty) frame on (ASC, $$twenty) start unbounded end [$$twenty] {
                        aggregate [$$191] <- [agg-sql-sum($$183)]
                        -- AGGREGATE  |UNPARTITIONED|
                          select (lt($$twenty, 10))
                          -- STREAM_SELECT  |UNPARTITIONED|
                            nested tuple source
                            -- NESTED_TUPLE_SOURCE  |UNPARTITIONED|
                     }
              -- WINDOW  |UNPARTITIONED|
                project ([$$twenty, $$186, $$190, $$185, $$184, $$183])
                -- STREAM_PROJECT  |UNPARTITIONED|
                  window-aggregate [] <- [] order (ASC, $$twenty) frame on (ASC, $$twenty) start unbounded end [$$twenty] {
                            aggregate [$$190] <- [agg-sql-sum($$182)]
                            -- AGGREGATE  |LOCAL|
                              nested tuple source
                              -- NESTED_TUPLE_SOURCE  |LOCAL|
                         }
                  -- WINDOW  |UNPARTITIONED|
                    exchange
                    -- SORT_MERGE_EXCHANGE [$$twenty(ASC) ]  |PARTITIONED|
                      group by ([$$twenty := $$198]) decor ([]) {
                                aggregate [$$182, $$183, $$184, $$185, $$186] <- [agg-global-sql-sum($$193), agg-global-sql-sum($$194), agg-global-sql-sum($$195), agg-global-sql-sum($$196), agg-global-sql-sum($$197)]
                                -- AGGREGATE  |LOCAL|
                                  nested tuple source
                                  -- NESTED_TUPLE_SOURCE  |LOCAL|
                             }
                      -- SORT_GROUP_BY[$$198]  |PARTITIONED|
                        exchange
                        -- HASH_PARTITION_EXCHANGE [$$198]  |PARTITIONED|
                          group by ([$$198 := $$180]) decor ([]) {
                                    aggregate [$$193, $$194, $$195, $$196, $$197] <- [agg-local-sql-sum($$122), agg-local-sql-sum($$122), agg-local-sql-sum($$122), agg-local-sql-sum($$122), agg-local-sql-sum($$122)]
                                    -- AGGREGATE  |LOCAL|
                                      nested tuple source
                                      -- NESTED_TUPLE_SOURCE  |LOCAL|
                                 }
                          -- SORT_GROUP_BY[$$180]  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              project ([$$122, $$180])
                              -- STREAM_PROJECT  |PARTITIONED|
                                assign [$$122, $$180] <- [$$tenk.getField(4), $$tenk.getField(5)]
                                -- ASSIGN  |PARTITIONED|
                                  project ([$$tenk])
                                  -- STREAM_PROJECT  |PARTITIONED|
                                    exchange
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      data-scan []<-[$$181, $$tenk] <- test.tenk
                                      -- DATASOURCE_SCAN  |PARTITIONED|
                                        exchange
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          empty-tuple-source
                                          -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
