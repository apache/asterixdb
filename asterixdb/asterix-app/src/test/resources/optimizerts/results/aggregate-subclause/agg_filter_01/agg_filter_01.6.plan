distribute result [$$123]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    assign [$$123] <- [{"twothous": $$125, "fivethous": $$135, "tenthous": $$tenk.tenthous, "cnt": $$127, "sm": $$128, "cnt_filter": $$129, "sm_filter": $$130}] project: [$$123]
    -- ASSIGN  |UNPARTITIONED|
      window-aggregate [] <- [] order (ASC, $$tenk.tenthous) frame on (ASC, $$tenk.tenthous) start unbounded end [$$tenk.tenthous] {
                aggregate [$$130, $$129] <- [agg-sql-sum($$tenk.tenthous), agg-sql-count(1)]
                -- AGGREGATE  |UNPARTITIONED|
                  select (eq($$125, 0))
                  -- STREAM_SELECT  |UNPARTITIONED|
                    project ([$$125, $$tenk.tenthous])
                    -- STREAM_PROJECT  |UNPARTITIONED|
                      nested tuple source
                      -- NESTED_TUPLE_SOURCE  |UNPARTITIONED|
             }
      -- WINDOW  |UNPARTITIONED|
        window-aggregate [] <- [] order (ASC, $$tenk.tenthous) frame on (ASC, $$tenk.tenthous) start unbounded end [$$tenk.tenthous] {
                  aggregate [$$128, $$127] <- [agg-sql-sum($$tenk.tenthous), agg-sql-count(1)]
                  -- AGGREGATE  |LOCAL|
                    nested tuple source
                    -- NESTED_TUPLE_SOURCE  |LOCAL|
               }
        -- WINDOW  |UNPARTITIONED|
          exchange
          -- SORT_MERGE_EXCHANGE [$$tenk.tenthous(ASC) ]  |PARTITIONED|
            order (ASC, $$tenk.tenthous)
            -- STABLE_SORT [$$tenk.tenthous(ASC)]  |PARTITIONED|
              exchange
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                select (eq($$tenk.getField(7), 0)) project: [$$125, $$135, $$tenk.tenthous]
                -- STREAM_SELECT  |PARTITIONED|
                  assign [$$135, $$tenk.tenthous, $$125] <- [$$tenk.getField(9), $$tenk.getField(10), $$tenk.getField(8)]
                  -- ASSIGN  |PARTITIONED|
                    project ([$$tenk])
                    -- STREAM_PROJECT  |PARTITIONED|
                      exchange
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        data-scan []<-[$$126, $$tenk] <- test.tenk
                        -- DATASOURCE_SCAN  |PARTITIONED|
                          exchange
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            empty-tuple-source
                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
