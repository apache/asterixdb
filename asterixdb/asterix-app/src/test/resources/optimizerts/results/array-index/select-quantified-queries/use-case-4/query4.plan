distribute result [$$44]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    assign [$$44] <- [{"business_id": $$48}] project: [$$44]
    -- ASSIGN  |PARTITIONED|
      select ($$41) project: [$$48]
      -- STREAM_SELECT  |PARTITIONED|
        project ([$$48, $$41])
        -- STREAM_PROJECT  |PARTITIONED|
          subplan {
                    aggregate [$$41] <- [non-empty-stream()]
                    -- AGGREGATE  |LOCAL|
                      select (and($$38, eq($$39, 0)))
                      -- STREAM_SELECT  |LOCAL|
                        project ([$$38, $$39])
                        -- STREAM_PROJECT  |LOCAL|
                          subplan {
                                    aggregate [$$38, $$39] <- [non-empty-stream(), agg-sql-count(switch-case(gt($$D, "2019-06-07"), true, null, true))]
                                    -- AGGREGATE  |LOCAL|
                                      unnest $$D <- scan-collection($$47)
                                      -- UNNEST  |LOCAL|
                                        project ([$$47])
                                        -- STREAM_PROJECT  |LOCAL|
                                          nested tuple source
                                          -- NESTED_TUPLE_SOURCE  |LOCAL|
                                 }
                          -- SUBPLAN  |LOCAL|
                            assign [$$47] <- [$$CT.getField(0)] project: [$$47]
                            -- ASSIGN  |LOCAL|
                              unnest $$CT <- scan-collection($$46) project: [$$CT]
                              -- UNNEST  |LOCAL|
                                project ([$$46])
                                -- STREAM_PROJECT  |LOCAL|
                                  nested tuple source
                                  -- NESTED_TUPLE_SOURCE  |LOCAL|
                 }
          -- SUBPLAN  |PARTITIONED|
            assign [$$48, $$46] <- [$$C.getField(1), $$C.getField(2)] project: [$$48, $$46]
            -- ASSIGN  |PARTITIONED|
              project ([$$C])
              -- STREAM_PROJECT  |PARTITIONED|
                exchange
                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                  unnest-map [$$45, $$C] <- index-search("YelpCheckin", 0, "Default", "TestYelp", "YelpCheckin", false, false, 1, $$53, 1, $$53, true, true, true)
                  -- BTREE_SEARCH  |PARTITIONED|
                    exchange
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      distinct ([$$53])
                      -- PRE_SORTED_DISTINCT_BY  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          order (ASC, $$53)
                          -- STABLE_SORT [$$53(ASC)]  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              project ([$$53])
                              -- STREAM_PROJECT  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  unnest-map [$$52, $$53] <- index-search("IdxYelpCheckinDates", 0, "Default", "TestYelp", "YelpCheckin", false, false, 1, $$51, 0, false, true, false)
                                  -- BTREE_SEARCH  |PARTITIONED|
                                    exchange
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      assign [$$51] <- ["2019-06-07"]
                                      -- ASSIGN  |PARTITIONED|
                                        empty-tuple-source
                                        -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
