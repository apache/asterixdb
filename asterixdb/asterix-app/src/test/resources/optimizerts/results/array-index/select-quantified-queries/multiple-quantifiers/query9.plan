distribute result [$$73]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    project ([$$73])
    -- STREAM_PROJECT  |PARTITIONED|
      assign [$$73] <- [{"D1": $$D1}]
      -- ASSIGN  |PARTITIONED|
        project ([$$D1])
        -- STREAM_PROJECT  |PARTITIONED|
          select (and($$69, eq($$70, 0)))
          -- STREAM_SELECT  |PARTITIONED|
            project ([$$D1, $$69, $$70])
            -- STREAM_PROJECT  |PARTITIONED|
              subplan {
                        aggregate [$$69, $$70] <- [non-empty-stream(), agg-sql-count(switch-case(and(eq($$81, 2), eq($$82, 3), and($$65, eq($$66, 0))), true, null, true))]
                        -- AGGREGATE  |LOCAL|
                          subplan {
                                    aggregate [$$65, $$66] <- [non-empty-stream(), agg-sql-count(switch-case(and(eq($$79, 1), eq($$80, 2)), true, null, true))]
                                    -- AGGREGATE  |LOCAL|
                                      assign [$$80] <- [$$J2.getField("item")]
                                      -- ASSIGN  |LOCAL|
                                        unnest $$J2 <- scan-collection($$78)
                                        -- UNNEST  |LOCAL|
                                          assign [$$79] <- [$$I2.getField(0)]
                                          -- ASSIGN  |LOCAL|
                                            unnest $$I2 <- scan-collection($$77)
                                            -- UNNEST  |LOCAL|
                                              nested tuple source
                                              -- NESTED_TUPLE_SOURCE  |LOCAL|
                                 }
                          -- SUBPLAN  |LOCAL|
                            assign [$$81] <- [$$J.getField("item")]
                            -- ASSIGN  |LOCAL|
                              unnest $$J <- scan-collection($$76)
                              -- UNNEST  |LOCAL|
                                assign [$$82, $$78, $$77] <- [$$I1.getField(0), $$I1.getField("other_inner_items"), $$I1.getField(1)]
                                -- ASSIGN  |LOCAL|
                                  unnest $$I1 <- scan-collection($$75)
                                  -- UNNEST  |LOCAL|
                                    nested tuple source
                                    -- NESTED_TUPLE_SOURCE  |LOCAL|
                     }
              -- SUBPLAN  |PARTITIONED|
                assign [$$76, $$75] <- [$$D1.getField("other_items"), $$D1.getField(1)]
                -- ASSIGN  |PARTITIONED|
                  project ([$$D1])
                  -- STREAM_PROJECT  |PARTITIONED|
                    exchange
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      unnest-map [$$74, $$D1] <- index-search("Dataset1", 0, "TestDataverse", "Dataset1", false, false, 1, $$88, 1, $$88, true, true, true)
                      -- BTREE_SEARCH  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          distinct ([$$88])
                          -- PRE_SORTED_DISTINCT_BY  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              order (ASC, $$88)
                              -- STABLE_SORT [$$88(ASC)]  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  project ([$$88])
                                  -- STREAM_PROJECT  |PARTITIONED|
                                    exchange
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      unnest-map [$$87, $$88] <- index-search("d1Idx", 0, "TestDataverse", "Dataset1", false, false, 1, $$85, 1, $$86, true, true, true)
                                      -- BTREE_SEARCH  |PARTITIONED|
                                        exchange
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          assign [$$85, $$86] <- [1, 1]
                                          -- ASSIGN  |PARTITIONED|
                                            empty-tuple-source
                                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
