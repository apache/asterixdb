distribute result [$$78]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    assign [$$78] <- [{"D1": $$D1}] project: [$$78]
    -- ASSIGN  |PARTITIONED|
      select (and($$74, eq($$75, 0))) project: [$$D1]
      -- STREAM_SELECT  |PARTITIONED|
        project ([$$D1, $$74, $$75])
        -- STREAM_PROJECT  |PARTITIONED|
          subplan {
                    aggregate [$$74, $$75] <- [non-empty-stream(), agg-sql-count(switch-case(and(eq($$86, 2), eq($$87, 3), and($$70, eq($$71, 0))), true, null, true))]
                    -- AGGREGATE  |LOCAL|
                      subplan {
                                aggregate [$$70, $$71] <- [non-empty-stream(), agg-sql-count(switch-case(and(eq($$84, 1), eq($$85, 2)), true, null, true))]
                                -- AGGREGATE  |LOCAL|
                                  assign [$$85] <- [$$J2.getField("item")]
                                  -- ASSIGN  |LOCAL|
                                    unnest $$J2 <- scan-collection($$83) project: [$$84, $$J2]
                                    -- UNNEST  |LOCAL|
                                      assign [$$84] <- [$$I2.getField(0)] project: [$$83, $$84]
                                      -- ASSIGN  |LOCAL|
                                        unnest $$I2 <- scan-collection($$82) project: [$$83, $$I2]
                                        -- UNNEST  |LOCAL|
                                          project ([$$83, $$82])
                                          -- STREAM_PROJECT  |LOCAL|
                                            nested tuple source
                                            -- NESTED_TUPLE_SOURCE  |LOCAL|
                             }
                      -- SUBPLAN  |LOCAL|
                        assign [$$86] <- [$$J.getField("item")] project: [$$87, $$83, $$82, $$86]
                        -- ASSIGN  |LOCAL|
                          unnest $$J <- scan-collection($$81) project: [$$87, $$83, $$82, $$J]
                          -- UNNEST  |LOCAL|
                            assign [$$87, $$83, $$82] <- [$$I1.getField(0), $$I1.getField("other_inner_items"), $$I1.getField(1)] project: [$$81, $$87, $$83, $$82]
                            -- ASSIGN  |LOCAL|
                              unnest $$I1 <- scan-collection($$80) project: [$$81, $$I1]
                              -- UNNEST  |LOCAL|
                                project ([$$81, $$80])
                                -- STREAM_PROJECT  |LOCAL|
                                  nested tuple source
                                  -- NESTED_TUPLE_SOURCE  |LOCAL|
                 }
          -- SUBPLAN  |PARTITIONED|
            assign [$$81, $$80] <- [$$D1.getField("other_items"), $$D1.getField(1)]
            -- ASSIGN  |PARTITIONED|
              project ([$$D1])
              -- STREAM_PROJECT  |PARTITIONED|
                exchange
                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                  unnest-map [$$79, $$D1] <- index-search("Dataset1", 0, "Default", "TestDataverse", "Dataset1", false, false, 1, $$93, 1, $$93, true, true, true)
                  -- BTREE_SEARCH  |PARTITIONED|
                    exchange
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      distinct ([$$93])
                      -- PRE_SORTED_DISTINCT_BY  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          order (ASC, $$93)
                          -- STABLE_SORT [$$93(ASC)]  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              project ([$$93])
                              -- STREAM_PROJECT  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  unnest-map [$$92, $$93] <- index-search("d1Idx", 0, "Default", "TestDataverse", "Dataset1", false, false, 1, $$90, 1, $$91, true, true, true)
                                  -- BTREE_SEARCH  |PARTITIONED|
                                    exchange
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      assign [$$90, $$91] <- [1, 1]
                                      -- ASSIGN  |PARTITIONED|
                                        empty-tuple-source
                                        -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
