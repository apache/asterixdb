distribute result [$$43]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    project ([$$43])
    -- STREAM_PROJECT  |PARTITIONED|
      assign [$$43] <- [{"business_id": $$48}]
      -- ASSIGN  |PARTITIONED|
        project ([$$48])
        -- STREAM_PROJECT  |PARTITIONED|
          select ($$40)
          -- STREAM_SELECT  |PARTITIONED|
            project ([$$48, $$40])
            -- STREAM_PROJECT  |PARTITIONED|
              subplan {
                        aggregate [$$40] <- [empty-stream()]
                        -- AGGREGATE  |LOCAL|
                          select (not(if-missing-or-null(and(gt(len($$46), 0), $$38), false)))
                          -- STREAM_SELECT  |LOCAL|
                            subplan {
                                      aggregate [$$38] <- [empty-stream()]
                                      -- AGGREGATE  |LOCAL|
                                        select (not(if-missing-or-null(gt($$D, "2019-06-07"), false)))
                                        -- STREAM_SELECT  |LOCAL|
                                          unnest $$D <- scan-collection($$46)
                                          -- UNNEST  |LOCAL|
                                            nested tuple source
                                            -- NESTED_TUPLE_SOURCE  |LOCAL|
                                   }
                            -- SUBPLAN  |LOCAL|
                              assign [$$46] <- [$$CT.getField(0)]
                              -- ASSIGN  |LOCAL|
                                unnest $$CT <- scan-collection($$45)
                                -- UNNEST  |LOCAL|
                                  nested tuple source
                                  -- NESTED_TUPLE_SOURCE  |LOCAL|
                     }
              -- SUBPLAN  |PARTITIONED|
                project ([$$48, $$45])
                -- STREAM_PROJECT  |PARTITIONED|
                  assign [$$48, $$45] <- [$$C.getField(1), $$C.getField(2)]
                  -- ASSIGN  |PARTITIONED|
                    project ([$$C])
                    -- STREAM_PROJECT  |PARTITIONED|
                      exchange
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        data-scan []<-[$$44, $$C] <- TestYelp.YelpCheckin
                        -- DATASOURCE_SCAN  |PARTITIONED|
                          exchange
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            empty-tuple-source
                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
