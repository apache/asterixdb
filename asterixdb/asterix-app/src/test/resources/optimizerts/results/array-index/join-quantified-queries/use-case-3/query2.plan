distribute result [$$67]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    assign [$$67] <- [{"$1": $$70}] project: [$$67]
    -- ASSIGN  |UNPARTITIONED|
      aggregate [$$70] <- [agg-sql-sum($$75)]
      -- AGGREGATE  |UNPARTITIONED|
        exchange
        -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
          aggregate [$$75] <- [agg-sql-count(1)]
          -- AGGREGATE  |PARTITIONED|
            select (and($$55, eq($$56, 0)))
            -- STREAM_SELECT  |PARTITIONED|
              project ([$$55, $$56])
              -- STREAM_PROJECT  |PARTITIONED|
                subplan {
                          aggregate [$$55, $$56] <- [non-empty-stream(), agg-sql-count(switch-case(eq($$73, $$74), true, null, true))]
                          -- AGGREGATE  |LOCAL|
                            assign [$$73] <- [$$D.getField(0)]
                            -- ASSIGN  |LOCAL|
                              unnest $$D <- scan-collection($$72) project: [$$74, $$D]
                              -- UNNEST  |LOCAL|
                                project ([$$74, $$72])
                                -- STREAM_PROJECT  |LOCAL|
                                  nested tuple source
                                  -- NESTED_TUPLE_SOURCE  |LOCAL|
                       }
                -- SUBPLAN  |PARTITIONED|
                  select (eq($$C.getField(1), "--Ni3oJ4VOqfOEu7Sj2Vzg")) project: [$$74, $$72]
                  -- STREAM_SELECT  |PARTITIONED|
                    assign [$$72] <- [$$C.getField(2)]
                    -- ASSIGN  |PARTITIONED|
                      project ([$$74, $$C])
                      -- STREAM_PROJECT  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          unnest-map [$$69, $$C] <- index-search("YelpCheckin", 0, "Default", "TestYelp", "YelpCheckin", true, false, 1, $$77, 1, $$77, true, true, true)
                          -- BTREE_SEARCH  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              project ([$$77, $$74])
                              -- STREAM_PROJECT  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  distinct ([$$77, $$68])
                                  -- PRE_SORTED_DISTINCT_BY  |PARTITIONED|
                                    exchange
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      order (ASC, $$77) (ASC, $$68)
                                      -- STABLE_SORT [$$77(ASC), $$68(ASC)]  |PARTITIONED|
                                        exchange
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          project ([$$68, $$74, $$77])
                                          -- STREAM_PROJECT  |PARTITIONED|
                                            exchange
                                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                              unnest-map [$$76, $$77] <- index-search("IdxYelpCheckinDates", 0, "Default", "TestYelp", "YelpCheckin", true, true, 1, $$74, 1, $$74, true, true, true)
                                              -- BTREE_SEARCH  |PARTITIONED|
                                                exchange
                                                -- BROADCAST_EXCHANGE  |PARTITIONED|
                                                  assign [$$74] <- [$$M.getField(2)] project: [$$68, $$74]
                                                  -- ASSIGN  |PARTITIONED|
                                                    exchange
                                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                      data-scan []<-[$$68, $$M] <- TestYelp.YelpCheckinDateMarkers
                                                      -- DATASOURCE_SCAN  |PARTITIONED|
                                                        exchange
                                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                          empty-tuple-source
                                                          -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
