distribute result [$$61]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    project ([$$61])
    -- STREAM_PROJECT  |UNPARTITIONED|
      assign [$$61] <- [{"$1": $$64}]
      -- ASSIGN  |UNPARTITIONED|
        aggregate [$$64] <- [agg-sql-sum($$69)]
        -- AGGREGATE  |UNPARTITIONED|
          exchange
          -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
            aggregate [$$69] <- [agg-sql-count(1)]
            -- AGGREGATE  |PARTITIONED|
              select ($$51)
              -- STREAM_SELECT  |PARTITIONED|
                project ([$$51])
                -- STREAM_PROJECT  |PARTITIONED|
                  subplan {
                            aggregate [$$51] <- [non-empty-stream()]
                            -- AGGREGATE  |LOCAL|
                              select (eq($$67, $$68))
                              -- STREAM_SELECT  |LOCAL|
                                assign [$$67] <- [$$D.getField(0)]
                                -- ASSIGN  |LOCAL|
                                  unnest $$D <- scan-collection($$66)
                                  -- UNNEST  |LOCAL|
                                    nested tuple source
                                    -- NESTED_TUPLE_SOURCE  |LOCAL|
                         }
                  -- SUBPLAN  |PARTITIONED|
                    project ([$$68, $$66])
                    -- STREAM_PROJECT  |PARTITIONED|
                      select (eq($$C.getField(1), "--Ni3oJ4VOqfOEu7Sj2Vzg"))
                      -- STREAM_SELECT  |PARTITIONED|
                        assign [$$66] <- [$$C.getField(2)]
                        -- ASSIGN  |PARTITIONED|
                          project ([$$68, $$C])
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              unnest-map [$$63, $$C] <- index-search("YelpCheckin", 0, "TestYelp", "YelpCheckin", true, false, 1, $$71, 1, $$71, true, true, true)
                              -- BTREE_SEARCH  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  project ([$$71, $$68])
                                  -- STREAM_PROJECT  |PARTITIONED|
                                    exchange
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      distinct ([$$71, $$62])
                                      -- PRE_SORTED_DISTINCT_BY  |PARTITIONED|
                                        exchange
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          order (ASC, $$71) (ASC, $$62)
                                          -- STABLE_SORT [$$71(ASC), $$62(ASC)]  |PARTITIONED|
                                            exchange
                                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                              project ([$$62, $$68, $$71])
                                              -- STREAM_PROJECT  |PARTITIONED|
                                                exchange
                                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                  unnest-map [$$70, $$71] <- index-search("IdxYelpCheckinDates", 0, "TestYelp", "YelpCheckin", true, true, 1, $$68, 1, $$68, true, true, true)
                                                  -- BTREE_SEARCH  |PARTITIONED|
                                                    exchange
                                                    -- BROADCAST_EXCHANGE  |PARTITIONED|
                                                      project ([$$62, $$68])
                                                      -- STREAM_PROJECT  |PARTITIONED|
                                                        assign [$$68] <- [$$M.getField(2)]
                                                        -- ASSIGN  |PARTITIONED|
                                                          exchange
                                                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                            data-scan []<-[$$62, $$M] <- TestYelp.YelpCheckinDateMarkers
                                                            -- DATASOURCE_SCAN  |PARTITIONED|
                                                              exchange
                                                              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                                empty-tuple-source
                                                                -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
