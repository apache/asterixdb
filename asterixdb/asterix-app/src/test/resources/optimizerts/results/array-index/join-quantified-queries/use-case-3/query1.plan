distribute result [$$65]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    assign [$$65] <- [{"$1": $$68}] project: [$$65]
    -- ASSIGN  |UNPARTITIONED|
      aggregate [$$68] <- [agg-sql-sum($$73)]
      -- AGGREGATE  |UNPARTITIONED|
        exchange
        -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
          aggregate [$$73] <- [agg-sql-count(1)]
          -- AGGREGATE  |PARTITIONED|
            select ($$55)
            -- STREAM_SELECT  |PARTITIONED|
              project ([$$55])
              -- STREAM_PROJECT  |PARTITIONED|
                subplan {
                          aggregate [$$55] <- [non-empty-stream()]
                          -- AGGREGATE  |LOCAL|
                            select (eq($$71, $$72))
                            -- STREAM_SELECT  |LOCAL|
                              assign [$$71] <- [$$D.getField(0)] project: [$$72, $$71]
                              -- ASSIGN  |LOCAL|
                                unnest $$D <- scan-collection($$70) project: [$$72, $$D]
                                -- UNNEST  |LOCAL|
                                  project ([$$72, $$70])
                                  -- STREAM_PROJECT  |LOCAL|
                                    nested tuple source
                                    -- NESTED_TUPLE_SOURCE  |LOCAL|
                       }
                -- SUBPLAN  |PARTITIONED|
                  select (eq($$C.getField(1), "--Ni3oJ4VOqfOEu7Sj2Vzg")) project: [$$72, $$70]
                  -- STREAM_SELECT  |PARTITIONED|
                    assign [$$70] <- [$$C.getField(2)]
                    -- ASSIGN  |PARTITIONED|
                      project ([$$72, $$C])
                      -- STREAM_PROJECT  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          unnest-map [$$67, $$C] <- index-search("YelpCheckin", 0, "Default", "TestYelp", "YelpCheckin", true, false, 1, $$75, 1, $$75, true, true, true)
                          -- BTREE_SEARCH  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              project ([$$75, $$72])
                              -- STREAM_PROJECT  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  distinct ([$$75, $$66])
                                  -- PRE_SORTED_DISTINCT_BY  |PARTITIONED|
                                    exchange
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      order (ASC, $$75) (ASC, $$66)
                                      -- STABLE_SORT [$$75(ASC), $$66(ASC)]  |PARTITIONED|
                                        exchange
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          project ([$$66, $$72, $$75])
                                          -- STREAM_PROJECT  |PARTITIONED|
                                            exchange
                                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                              unnest-map [$$74, $$75] <- index-search("IdxYelpCheckinDates", 0, "Default", "TestYelp", "YelpCheckin", true, true, 1, $$72, 1, $$72, true, true, true)
                                              -- BTREE_SEARCH  |PARTITIONED|
                                                exchange
                                                -- BROADCAST_EXCHANGE  |PARTITIONED|
                                                  assign [$$72] <- [$$M.getField(2)] project: [$$66, $$72]
                                                  -- ASSIGN  |PARTITIONED|
                                                    exchange
                                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                      data-scan []<-[$$66, $$M] <- TestYelp.YelpCheckinDateMarkers
                                                      -- DATASOURCE_SCAN  |PARTITIONED|
                                                        exchange
                                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                          empty-tuple-source
                                                          -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
