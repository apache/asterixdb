distribute result [$$67]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    project ([$$67])
    -- STREAM_PROJECT  |PARTITIONED|
      assign [$$67] <- [{"D1": $$D1}]
      -- ASSIGN  |PARTITIONED|
        project ([$$D1])
        -- STREAM_PROJECT  |PARTITIONED|
          select ($$65)
          -- STREAM_SELECT  |PARTITIONED|
            project ([$$D1, $$65])
            -- STREAM_PROJECT  |PARTITIONED|
              subplan {
                        aggregate [$$65] <- [non-empty-stream()]
                        -- AGGREGATE  |LOCAL|
                          select ($$63)
                          -- STREAM_SELECT  |LOCAL|
                            subplan {
                                      aggregate [$$63] <- [non-empty-stream()]
                                      -- AGGREGATE  |LOCAL|
                                        select (eq($$75, 2))
                                        -- STREAM_SELECT  |LOCAL|
                                          assign [$$75] <- [$$J2.getField("item")]
                                          -- ASSIGN  |LOCAL|
                                            unnest $$J2 <- scan-collection($$74)
                                            -- UNNEST  |LOCAL|
                                              select (eq($$73, 1))
                                              -- STREAM_SELECT  |LOCAL|
                                                assign [$$73] <- [$$I2.getField(0)]
                                                -- ASSIGN  |LOCAL|
                                                  unnest $$I2 <- scan-collection($$72)
                                                  -- UNNEST  |LOCAL|
                                                    nested tuple source
                                                    -- NESTED_TUPLE_SOURCE  |LOCAL|
                                   }
                            -- SUBPLAN  |LOCAL|
                              select (eq($$71, 2))
                              -- STREAM_SELECT  |LOCAL|
                                assign [$$71] <- [$$J.getField("item")]
                                -- ASSIGN  |LOCAL|
                                  unnest $$J <- scan-collection($$70)
                                  -- UNNEST  |LOCAL|
                                    assign [$$74, $$72] <- [$$I1.getField("other_inner_items"), $$I1.getField(0)]
                                    -- ASSIGN  |LOCAL|
                                      unnest $$I1 <- scan-collection($$69)
                                      -- UNNEST  |LOCAL|
                                        nested tuple source
                                        -- NESTED_TUPLE_SOURCE  |LOCAL|
                     }
              -- SUBPLAN  |PARTITIONED|
                assign [$$70, $$69] <- [$$D1.getField("other_items"), $$D1.getField(1)]
                -- ASSIGN  |PARTITIONED|
                  project ([$$D1])
                  -- STREAM_PROJECT  |PARTITIONED|
                    exchange
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      unnest-map [$$68, $$D1] <- index-search("Dataset1", 0, "TestDataverse", "Dataset1", false, false, 1, $$81, 1, $$81, true, true, true)
                      -- BTREE_SEARCH  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          distinct ([$$81])
                          -- PRE_SORTED_DISTINCT_BY  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              order (ASC, $$81)
                              -- STABLE_SORT [$$81(ASC)]  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  project ([$$81])
                                  -- STREAM_PROJECT  |PARTITIONED|
                                    exchange
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      unnest-map [$$80, $$81] <- index-search("d1Idx", 0, "TestDataverse", "Dataset1", false, false, 1, $$78, 1, $$79, true, true, true)
                                      -- BTREE_SEARCH  |PARTITIONED|
                                        exchange
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          assign [$$78, $$79] <- [1, 1]
                                          -- ASSIGN  |PARTITIONED|
                                            empty-tuple-source
                                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
