distribute result [$$125]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    assign [$$125] <- [{"l_returnflag": $$l_returnflag, "l_linestatus": $$l_linestatus, "count_cheaps": $$131, "count_expensives": $$132}] project: [$$125]
    -- ASSIGN  |PARTITIONED|
      exchange
      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
        order (ASC, $$l_returnflag) (ASC, $$l_linestatus)
        -- STABLE_SORT [$$l_returnflag(ASC), $$l_linestatus(ASC)]  |PARTITIONED|
          exchange
          -- RANGE_PARTITION_EXCHANGE [$$l_returnflag(ASC), $$l_linestatus(ASC)]  |PARTITIONED|
            forward: shared-variable = $$144
            -- FORWARD  |PARTITIONED|
              exchange
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                replicate
                -- REPLICATE  |PARTITIONED|
                  exchange
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    group by ([$$l_returnflag := $$139; $$l_linestatus := $$140]) decor ([]) {
                              aggregate [$$131] <- [agg-sum($$137)]
                              -- AGGREGATE  |LOCAL|
                                nested tuple source
                                -- NESTED_TUPLE_SOURCE  |LOCAL|
                           }
                           {
                              aggregate [$$132] <- [agg-sum($$138)]
                              -- AGGREGATE  |LOCAL|
                                nested tuple source
                                -- NESTED_TUPLE_SOURCE  |LOCAL|
                           }
                    -- PRE_CLUSTERED_GROUP_BY[$$139, $$140]  |PARTITIONED|
                      exchange
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        order (ASC, $$139) (ASC, $$140)
                        -- STABLE_SORT [$$139(ASC), $$140(ASC)]  |PARTITIONED|
                          exchange
                          -- HASH_PARTITION_EXCHANGE [$$139, $$140]  |PARTITIONED|
                            group by ([$$139 := $$126; $$140 := $$127]) decor ([]) {
                                      aggregate [$$137] <- [agg-count($$l)]
                                      -- AGGREGATE  |LOCAL|
                                        select (gt($$135, 0.05))
                                        -- STREAM_SELECT  |LOCAL|
                                          project ([$$l, $$135])
                                          -- STREAM_PROJECT  |LOCAL|
                                            nested tuple source
                                            -- NESTED_TUPLE_SOURCE  |LOCAL|
                                   }
                                   {
                                      aggregate [$$138] <- [agg-count($$l)]
                                      -- AGGREGATE  |LOCAL|
                                        select (le($$135, 0.05))
                                        -- STREAM_SELECT  |LOCAL|
                                          project ([$$l, $$135])
                                          -- STREAM_PROJECT  |LOCAL|
                                            nested tuple source
                                            -- NESTED_TUPLE_SOURCE  |LOCAL|
                                   }
                            -- PRE_CLUSTERED_GROUP_BY[$$126, $$127]  |PARTITIONED|
                              exchange
                              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                order (ASC, $$126) (ASC, $$127)
                                -- STABLE_SORT [$$126(ASC), $$127(ASC)]  |PARTITIONED|
                                  exchange
                                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                    assign [$$127, $$126, $$135] <- [$$l.getField(9), $$l.getField(8), $$l.getField(6)]
                                    -- ASSIGN  |PARTITIONED|
                                      project ([$$l])
                                      -- STREAM_PROJECT  |PARTITIONED|
                                        exchange
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          data-scan []<-[$$129, $$130, $$l] <- tpch.LineItem
                                          -- DATASOURCE_SCAN  |PARTITIONED|
                                            exchange
                                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                              empty-tuple-source
                                              -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
              exchange
              -- BROADCAST_EXCHANGE  |PARTITIONED|
                aggregate [$$144] <- [agg-range-map($$141, $$142, $$143)]
                -- AGGREGATE  |UNPARTITIONED|
                  exchange
                  -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
                    aggregate [$$141, $$142, $$143] <- [agg-local-sampling($$l_returnflag, $$l_linestatus), agg-null-writer($$l_returnflag), agg-null-writer($$l_linestatus)]
                    -- AGGREGATE  |PARTITIONED|
                      project ([$$l_returnflag, $$l_linestatus])
                      -- STREAM_PROJECT  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          replicate
                          -- REPLICATE  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              group by ([$$l_returnflag := $$139; $$l_linestatus := $$140]) decor ([]) {
                                        aggregate [$$131] <- [agg-sum($$137)]
                                        -- AGGREGATE  |LOCAL|
                                          nested tuple source
                                          -- NESTED_TUPLE_SOURCE  |LOCAL|
                                     }
                                     {
                                        aggregate [$$132] <- [agg-sum($$138)]
                                        -- AGGREGATE  |LOCAL|
                                          nested tuple source
                                          -- NESTED_TUPLE_SOURCE  |LOCAL|
                                     }
                              -- PRE_CLUSTERED_GROUP_BY[$$139, $$140]  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  order (ASC, $$139) (ASC, $$140)
                                  -- STABLE_SORT [$$139(ASC), $$140(ASC)]  |PARTITIONED|
                                    exchange
                                    -- HASH_PARTITION_EXCHANGE [$$139, $$140]  |PARTITIONED|
                                      group by ([$$139 := $$126; $$140 := $$127]) decor ([]) {
                                                aggregate [$$137] <- [agg-count($$l)]
                                                -- AGGREGATE  |LOCAL|
                                                  select (gt($$135, 0.05))
                                                  -- STREAM_SELECT  |LOCAL|
                                                    project ([$$l, $$135])
                                                    -- STREAM_PROJECT  |LOCAL|
                                                      nested tuple source
                                                      -- NESTED_TUPLE_SOURCE  |LOCAL|
                                             }
                                             {
                                                aggregate [$$138] <- [agg-count($$l)]
                                                -- AGGREGATE  |LOCAL|
                                                  select (le($$135, 0.05))
                                                  -- STREAM_SELECT  |LOCAL|
                                                    project ([$$l, $$135])
                                                    -- STREAM_PROJECT  |LOCAL|
                                                      nested tuple source
                                                      -- NESTED_TUPLE_SOURCE  |LOCAL|
                                             }
                                      -- PRE_CLUSTERED_GROUP_BY[$$126, $$127]  |PARTITIONED|
                                        exchange
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          order (ASC, $$126) (ASC, $$127)
                                          -- STABLE_SORT [$$126(ASC), $$127(ASC)]  |PARTITIONED|
                                            exchange
                                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                              assign [$$127, $$126, $$135] <- [$$l.getField(9), $$l.getField(8), $$l.getField(6)]
                                              -- ASSIGN  |PARTITIONED|
                                                project ([$$l])
                                                -- STREAM_PROJECT  |PARTITIONED|
                                                  exchange
                                                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                    data-scan []<-[$$129, $$130, $$l] <- tpch.LineItem
                                                    -- DATASOURCE_SCAN  |PARTITIONED|
                                                      exchange
                                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                        empty-tuple-source
                                                        -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
