/*
 * Description  : Check the Plan for Subscribing to a channel         
 * Expected Res : Success
 * Date         : Mar 2015
 */

drop dataverse channels if exists;
create dataverse channels;
use dataverse channels;


create type TweetMessageTypeuuid as closed {
	tweetid: uuid,
    sender-location: point,
	send-time: datetime,
    referred-topics: {{ string }},
	message-text: string,
	countA: int32,
	countB: int32
}


create dataset TweetMessageuuids(TweetMessageTypeuuid)
primary key tweetid autogenerated;

create function NearbyTweetsContainingText($location, $text) {
  for $tweet in dataset TweetMessageuuids
	let $circle := create-circle($location,30.0)
	where contains($tweet.message-text,$text)
	and spatial-intersect($tweet.sender-location, $location)
	return $tweet.message-text 
};

create repetitive channel nearbyTweetChannel using NearbyTweetsContainingText@2 period duration("PT10M");

write output to nc1:"rttest/channel-subscribe.adm";

create broker brokerA at "http://www.hello.com";

subscribe to nearbyTweetChannel (point("30.0, 30.0"), "Live") on brokerA;