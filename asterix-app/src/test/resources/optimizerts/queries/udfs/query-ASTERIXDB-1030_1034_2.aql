/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

drop dataverse emergencyTest if exists;
create dataverse emergencyTest;
use dataverse emergencyTest;

create type CHPReport as
{ "rid":uuid, "epicenter":point, "radius":double, "message":string, "timestamp":datetime, "param0":int64 }

create type sub as closed
{ "id":int, "param0":int64 }

create dataset NearbySheltersDuringTornadoDangerChannelSubscriptions(sub)
primary key id;

create dataset CHPReports(CHPReport)
primary key rid autogenerated;

create index times on CHPReports(timestamp);
create index locs2 on CHPReports(epicenter) type rtree;

for $sub in dataset NearbySheltersDuringTornadoDangerChannelSubscriptions
let $timewindow := day-time-duration("PT10M")
for $emergency in dataset CHPReports
where current-datetime()-$timewindow <= $emergency.timestamp
and $emergency.param0 = $sub.param0
return
{ "id":$sub.param0 }
;