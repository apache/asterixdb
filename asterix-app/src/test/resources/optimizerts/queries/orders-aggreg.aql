/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
drop dataverse orders-aggreg if exists;

create dataverse orders-aggreg;

use dataverse orders-aggreg;

create type OrderType as closed {
  oid: int32,
  cid: int32,
  orderstatus: string,
  orderpriority: string,
  clerk: string,
  total: float
}

create nodegroup group1 if not exists on asterix_nc1, asterix_nc2;

create dataset Orders(OrderType)
  primary key oid on group1;

write output to asterix_nc1:"/tmp/orders-aggreg.adm";

for $o in dataset('Orders')
group by $cid := $o.cid with $o
return { "cid": $cid , "ordpercust": count($o),  
         "totalcust": sum(for $i in $o return $i.total), 
         "avgcust": avg(for $i in $o return $i.total) } 
