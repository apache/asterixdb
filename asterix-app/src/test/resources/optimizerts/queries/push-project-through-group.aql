/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
drop dataverse fuzzyjoin_080 if exists;

create dataverse fuzzyjoin_080;

use dataverse fuzzyjoin_080;

create type DBLPType as open {
  id: int32, 
  dblpid: string,
  title: string,
  authors: string,
  misc: string
}

create nodegroup group1 if not exists on asterix_nc1, asterix_nc2;

create dataset DBLP(DBLPType) 
  primary key id on group1;


write output to asterix_nc1:'rttest/fuzzyjoin_080.adm';

    for $paperDBLP in dataset('DBLP')
    let $matches :=
            for $paper in dataset('DBLP')
            where $paper.authors = $paperDBLP.authors        
            return $paper.title
    return {'id': $paperDBLP.id, 'matches':$matches}
