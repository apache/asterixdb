DataverseUse test
TypeDecl TwitterUserType [
  closed RecordType {
    screen-name : string,
    lang : string,
    friends-count : int32,
    statuses-count : int32,
    name : string,
    followers-count : int32
  }
]
TypeDecl TweetMessageType [
  closed RecordType {
    tweetid : int64,
    user : TwitterUserType,
    sender-location : point,
    send-time : datetime,
    referred-topics : UnorderedList <string>
,
    message-text : string,
    countA : int32,
    countB : int32
  }
]
DatasetDecl TweetMessages(TweetMessageType) partitioned by [[tweetid]]
WriteOutputTo nc1:rttest/rtree-index-join_leftouterjoin-probe-pidx-with-join-rtree-sidx_01.adm
Query:
SELECT ELEMENT [
RecordConstructor [
  (
    LiteralExpr [STRING] [tweetid1]
    :
    FieldAccessor [
      Variable [ Name=t1 ]
      Field=tweetid
    ]
  )
  (
    LiteralExpr [STRING] [loc1]
    :
    FieldAccessor [
      Variable [ Name=t1 ]
      Field=sender-location
    ]
  )
  (
    LiteralExpr [STRING] [nearby-message]
    :
    (
      SELECT ELEMENT [
      RecordConstructor [
        (
          LiteralExpr [STRING] [tweetid2]
          :
          FieldAccessor [
            Variable [ Name=t2 ]
            Field=tweetid
          ]
        )
        (
          LiteralExpr [STRING] [loc2]
          :
          FieldAccessor [
            Variable [ Name=t2 ]
            Field=sender-location
          ]
        )
      ]
      ]
      FROM [        FunctionCall Metadata.dataset@1[
          LiteralExpr [STRING] [TweetMessages]
        ]
        AS
        Variable [ Name=t2 ]
      ]
      Where
        FunctionCall test.spatial-intersect@2[
          FieldAccessor [
            Variable [ Name=t2 ]
            Field=sender-location
          ]
          Variable [ Name=n ]
        ]
      Orderby
        FieldAccessor [
          Variable [ Name=t2 ]
          Field=tweetid
        ]
        ASC

    )
  )
]
]
FROM [  FunctionCall Metadata.dataset@1[
    LiteralExpr [STRING] [TweetMessages]
  ]
  AS
  Variable [ Name=t1 ]
]
LetVariable [ Name=n ]
  :=
  FunctionCall test.create-circle@2[
    FieldAccessor [
      Variable [ Name=t1 ]
      Field=sender-location
    ]
    LiteralExpr [DOUBLE] [0.5]
  ]
Where
  OperatorExpr [
    FieldAccessor [
      Variable [ Name=t1 ]
      Field=tweetid
    ]
    <
    FunctionCall test.int64@1[
      LiteralExpr [STRING] [10]
    ]
  ]
Orderby
  FieldAccessor [
    Variable [ Name=t1 ]
    Field=tweetid
  ]
  ASC

