DataverseUse fuzzyjoin
TypeDecl DBLPType [
  closed RecordType {
    id : int32,
    dblpid : string,
    title : string,
    authors : string,
    misc : string
  }
]
TypeDecl TOKENSRANKEDADMType [
  closed RecordType {
    token : int32,
    rank : int32
  }
]
DatasetDecl DBLP(DBLPType) partitioned by [[id]]
DatasetDecl TOKENSRANKEDADM(TOKENSRANKEDADMType) partitioned by [[rank]]
WriteOutputTo nc1:rttest/unnest_list_in_subplan.adm
Query:
SELECT ELEMENT [
RecordConstructor [
  (
    LiteralExpr [STRING] [id]
    :
    Variable [ Name=idDBLP ]
  )
  (
    LiteralExpr [STRING] [tokens]
    :
    Variable [ Name=tokensDBLP ]
  )
]
]
FROM [  FunctionCall Metadata.dataset@1[
    LiteralExpr [STRING] [DBLP]
  ]
  AS
  Variable [ Name=paperDBLP ]
]
LetVariable [ Name=idDBLP ]
  :=
  FieldAccessor [
    Variable [ Name=paperDBLP ]
    Field=id
  ]
LetVariable [ Name=tokensUnrankedDBLP ]
  :=
  FunctionCall fuzzyjoin.counthashed-word-tokens@1[
    FieldAccessor [
      Variable [ Name=paperDBLP ]
      Field=title
    ]
  ]
LetVariable [ Name=tokensDBLP ]
  :=
  (
    SELECT ELEMENT [
    FieldAccessor [
      Variable [ Name=tokenRanked ]
      Field=rank
    ]
    ]
    FROM [      Variable [ Name=tokensUnrankedDBLP ]
      AS
      Variable [ Name=tokenUnranked ]
,
      FunctionCall Metadata.dataset@1[
        LiteralExpr [STRING] [TOKENSRANKEDADM]
      ]
      AS
      Variable [ Name=tokenRanked ]
    ]
    Where
      OperatorExpr [
        Variable [ Name=tokenUnranked ]
        =
        FieldAccessor [
          Variable [ Name=tokenRanked ]
          Field=token
        ]
      ]
    Orderby
      FieldAccessor [
        Variable [ Name=tokenRanked ]
        Field=rank
      ]
      ASC

  )
