/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

drop  database custorder if exists;
create  database custorder;

use custorder;


create type custorder.AddressType as
 closed {
  number : int32,
  street : string,
  city : string
}

create type custorder.CustomerType as
 closed {
  cid : int32,
  name : string,
  age : int32?,
  address : AddressType?,
  lastorder : {
      oid : int32,
      total : float
  }

}

create type custorder.OrderType as
 closed {
  oid : int32,
  cid : int32,
  orderstatus : string,
  orderpriority : string,
  clerk : string,
  total : float
}

create  nodegroup group1 if not exists  on 
    nc1,
    nc2
;
create  table Customers(CustomerType) primary key cid on group1;

create  table Orders(OrderType) primary key oid on group1;

write output to nc1:"/tmp/custorder.adm"
select element {'cid':cid,'cust':cust,'cnt-orders':custorder.count(o),'orders':o}
from  Customers as c,
      Orders as o
where (c.cid = o.cid)
group by c.cid as cid
;
