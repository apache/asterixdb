/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Description    : Disjunctive predicate should be transformed into collection scan.
 *                  Secondary index should be used to probe the values retrieved from collection.
 * Success        : Yes
 */

drop  database test if exists;
create  database test;

use test;


create type test.NestedTestType as
{

}

create type test.TestType as
{
  id : string,
  "no-idx" : string,
  nested : NestedTestType
}

create  table TestSet(TestType) primary key id;

create  index TestSetIndex  on TestSet (nested.idx:string) type btree enforced;

select element x
from  TestSet as x
where ((x.nested.idx = 'one') or (x.nested.idx = 'two'))
;
