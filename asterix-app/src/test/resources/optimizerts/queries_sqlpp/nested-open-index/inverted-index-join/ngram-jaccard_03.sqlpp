/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Description    : Self joins dataset DBLP, based on the similarity-jaccard function of their titles' 3-gram tokens.
 *                  DBLP has a 3-gram index on title, and we expect the join to be transformed into an indexed nested-loop join.
 * Success        : Yes
 */

drop  database test if exists;
create  database test;

use test;


set "import-private-functions" "true";

create type test.DBLPTypetmp as
{
  id : int32,
  dblpid : string,
  authors : string,
  misc : string
}

create type test.DBLPType as
 closed {
  nested : DBLPTypetmp
}

create  table DBLP(DBLPType) primary key nested.id;

create  index ngram_index  on DBLP (nested.title:string) type ngram (3) enforced;

write output to asterix_nc1:"rttest/inverted-index-join_ngram-jaccard_01.adm"
select element {'arec':a,'brec':b}
from  DBLP as a,
      DBLP as b
where ((test."similarity-jaccard"(test."gram-tokens"(a.nested.title,3,false),test."gram-tokens"(b.nested.title,3,false)) >= 0.500000f) and (a.nested.id < b.nested.id))
;
