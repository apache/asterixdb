DataverseUse fuzzyjoin
Set import-private-functions=true
Query:
SELECT ELEMENT [
RecordConstructor [
  (
    LiteralExpr [STRING] [id]
    :
    Variable [ Name=idDBLP ]
  )
  (
    LiteralExpr [STRING] [prefixToken]
    :
    Variable [ Name=prefixTokenDBLP ]
  )
  (
    LiteralExpr [STRING] [tokens]
    :
    Variable [ Name=tokensDBLP ]
  )
]
]
FROM [  FunctionCall Metadata.dataset@1[
    LiteralExpr [STRING] [DBLP]
  ]
  AS
  Variable [ Name=paperDBLP ]
,
  FunctionCall fuzzyjoin.subset-collection@3[
    FunctionCall Metadata.dataset@1[
      LiteralExpr [STRING] [tokensDBLP]
    ]
    LiteralExpr [LONG] [0]
    FunctionCall fuzzyjoin.prefix-len-jaccard@2[
      FunctionCall Metadata.dataset@1[
        LiteralExpr [STRING] [lenDBLP]
      ]
      LiteralExpr [FLOAT] [0.5]
    ]
  ]
  AS
  Variable [ Name=prefixTokenDBLP ]
]
LetVariable [ Name=idDBLP ]
  :=
  FieldAccessor [
    Variable [ Name=paperDBLP ]
    Field=id
  ]
LetVariable [ Name=tokensUnrankedDBLP ]
  :=
  FunctionCall fuzzyjoin.counthashed-word-tokens@1[
    FieldAccessor [
      Variable [ Name=paperDBLP ]
      Field=title
    ]
  ]
LetVariable [ Name=lenDBLP ]
  :=
  FunctionCall fuzzyjoin.len@1[
    Variable [ Name=tokensUnrankedDBLP ]
  ]
LetVariable [ Name=tokensDBLP ]
  :=
  (
    SELECT ELEMENT [
    Variable [ Name=i ]
    ]
    FROM [      Variable [ Name=tokensUnrankedDBLP ]
      AS
      Variable [ Name=tokenUnranked ]
,
      (
        SELECT ELEMENT [
        Variable [ Name=tokenGroupped ]
        ]
        FROM [          FunctionCall Metadata.dataset@1[
            LiteralExpr [STRING] [DBLP]
          ]
          AS
          Variable [ Name=paper ]
,
          FunctionCall fuzzyjoin.counthashed-word-tokens@1[
            FieldAccessor [
              Variable [ Name=paper ]
              Field=title
            ]
          ]
          AS
          Variable [ Name=token ]
        ]
        LetVariable [ Name=id ]
          :=
          FieldAccessor [
            Variable [ Name=paper ]
            Field=id
          ]
        Groupby
          Variable [ Name=tokenGroupped ]
          :=
          Variable [ Name=token ]
          With
          Variable [ Name=id ]
          Variable [ Name=paper ]
          Variable [ Name=token ]
          Variable [ Name=tokenUnranked ]
          Variable [ Name=lenDBLP ]
          Variable [ Name=tokensUnrankedDBLP ]
          Variable [ Name=idDBLP ]
          Variable [ Name=paperDBLP ]
          Variable [ Name=prefixTokenDBLP ]

        Orderby
          FunctionCall fuzzyjoin.count@1[
            Variable [ Name=id ]
          ]
          ASC
          Variable [ Name=tokenGroupped ]
          ASC

      )
      AS
      Variable [ Name=tokenRanked ]
      AT
      Variable [ Name=i ]
    ]
    Where
      OperatorExpr [
        Variable [ Name=tokenUnranked ]
        =
        Variable [ Name=tokenRanked ]
      ]
    Orderby
      Variable [ Name=i ]
      ASC

  )
Orderby
  Variable [ Name=idDBLP ]
  ASC

