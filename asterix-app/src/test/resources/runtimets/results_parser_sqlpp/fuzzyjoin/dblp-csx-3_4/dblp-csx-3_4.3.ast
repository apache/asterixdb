DataverseUse fuzzyjoin
Set import-private-functions=true
Query:
SELECT ELEMENT [
RecordConstructor [
  (
    LiteralExpr [STRING] [dblp]
    :
    Variable [ Name=paperDBLP ]
  )
  (
    LiteralExpr [STRING] [csx]
    :
    Variable [ Name=paperCSX ]
  )
  (
    LiteralExpr [STRING] [sim]
    :
    FieldAccessor [
      Variable [ Name=ridpair ]
      Field=sim
    ]
  )
]
]
FROM [  (
    SELECT ELEMENT [
    RecordConstructor [
      (
        LiteralExpr [STRING] [idDBLP]
        :
        Variable [ Name=idDBLP ]
      )
      (
        LiteralExpr [STRING] [idCSX]
        :
        Variable [ Name=idCSX ]
      )
      (
        LiteralExpr [STRING] [sim]
        :
        IndexAccessor [
          Variable [ Name=sim ]
          Index:           Variable [ Name=sim ]
        ]
      )
    ]
    ]
    FROM [      FunctionCall Metadata.dataset@1[
        LiteralExpr [STRING] [DBLP]
      ]
      AS
      Variable [ Name=paperDBLP ]
,
      FunctionCall fuzzyjoin.subset-collection@3[
        FunctionCall Metadata.dataset@1[
          LiteralExpr [STRING] [tokensDBLP]
        ]
        LiteralExpr [LONG] [0]
        FunctionCall fuzzyjoin.prefix-len-jaccard@2[
          FunctionCall fuzzyjoin.len@1[
            FunctionCall Metadata.dataset@1[
              LiteralExpr [STRING] [tokensDBLP]
            ]
          ]
          LiteralExpr [FLOAT] [0.5]
        ]
      ]
      AS
      Variable [ Name=prefixTokenDBLP ]
,
      FunctionCall Metadata.dataset@1[
        LiteralExpr [STRING] [CSX]
      ]
      AS
      Variable [ Name=paperCSX ]
,
      FunctionCall fuzzyjoin.subset-collection@3[
        FunctionCall Metadata.dataset@1[
          LiteralExpr [STRING] [tokensCSX]
        ]
        LiteralExpr [LONG] [0]
        FunctionCall fuzzyjoin.prefix-len-jaccard@2[
          FunctionCall fuzzyjoin.len@1[
            FunctionCall Metadata.dataset@1[
              LiteralExpr [STRING] [tokensCSX]
            ]
          ]
          LiteralExpr [FLOAT] [0.5]
        ]
      ]
      AS
      Variable [ Name=prefixTokenCSX ]
    ]
    LetVariable [ Name=idDBLP ]
      :=
      FieldAccessor [
        Variable [ Name=paperDBLP ]
        Field=id
      ]
    LetVariable [ Name=tokensUnrankedDBLP ]
      :=
      FunctionCall fuzzyjoin.counthashed-word-tokens@1[
        FieldAccessor [
          Variable [ Name=paperDBLP ]
          Field=title
        ]
      ]
    LetVariable [ Name=tokensDBLP ]
      :=
      (
        SELECT ELEMENT [
        Variable [ Name=i ]
        ]
        FROM [          Variable [ Name=tokensUnrankedDBLP ]
          AS
          Variable [ Name=tokenUnranked ]
,
          (
            SELECT ELEMENT [
            Variable [ Name=tokenGroupped ]
            ]
            FROM [              FunctionCall Metadata.dataset@1[
                LiteralExpr [STRING] [DBLP]
              ]
              AS
              Variable [ Name=paper ]
,
              FunctionCall fuzzyjoin.counthashed-word-tokens@1[
                FieldAccessor [
                  Variable [ Name=paper ]
                  Field=title
                ]
              ]
              AS
              Variable [ Name=token ]
            ]
            LetVariable [ Name=id ]
              :=
              FieldAccessor [
                Variable [ Name=paper ]
                Field=id
              ]
            Groupby
              Variable [ Name=tokenGroupped ]
              :=
              Variable [ Name=token ]
              With
              Variable [ Name=id ]
              Variable [ Name=paper ]
              Variable [ Name=token ]
              Variable [ Name=tokenUnranked ]
              Variable [ Name=tokensDBLP ]
              Variable [ Name=tokensUnrankedDBLP ]
              Variable [ Name=idDBLP ]
              Variable [ Name=paperDBLP ]
              Variable [ Name=prefixTokenDBLP ]
              Variable [ Name=prefixTokenCSX ]
              Variable [ Name=paperCSX ]

            Orderby
              FunctionCall fuzzyjoin.count@1[
                Variable [ Name=id ]
              ]
              ASC
              Variable [ Name=tokenGroupped ]
              ASC

          )
          AS
          Variable [ Name=tokenRanked ]
          AT
          Variable [ Name=i ]
        ]
        Where
          OperatorExpr [
            Variable [ Name=tokenUnranked ]
            =
            Variable [ Name=tokenRanked ]
          ]
        Orderby
          Variable [ Name=i ]
          ASC

      )
    LetVariable [ Name=idCSX ]
      :=
      FieldAccessor [
        Variable [ Name=paperCSX ]
        Field=id
      ]
    LetVariable [ Name=tokensUnrankedCSX ]
      :=
      FunctionCall fuzzyjoin.counthashed-word-tokens@1[
        FieldAccessor [
          Variable [ Name=paperCSX ]
          Field=title
        ]
      ]
    LetVariable [ Name=tokensCSX ]
      :=
      (
        SELECT ELEMENT [
        Variable [ Name=i ]
        ]
        FROM [          Variable [ Name=tokensUnrankedCSX ]
          AS
          Variable [ Name=tokenUnranked ]
,
          (
            SELECT ELEMENT [
            Variable [ Name=tokenGroupped ]
            ]
            FROM [              FunctionCall Metadata.dataset@1[
                LiteralExpr [STRING] [DBLP]
              ]
              AS
              Variable [ Name=paper ]
,
              FunctionCall fuzzyjoin.counthashed-word-tokens@1[
                FieldAccessor [
                  Variable [ Name=paper ]
                  Field=title
                ]
              ]
              AS
              Variable [ Name=token ]
            ]
            LetVariable [ Name=id ]
              :=
              FieldAccessor [
                Variable [ Name=paper ]
                Field=id
              ]
            Groupby
              Variable [ Name=tokenGroupped ]
              :=
              Variable [ Name=token ]
              With
              Variable [ Name=id ]
              Variable [ Name=paper ]
              Variable [ Name=token ]
              Variable [ Name=tokenUnranked ]
              Variable [ Name=tokensCSX ]
              Variable [ Name=tokensUnrankedCSX ]
              Variable [ Name=idCSX ]
              Variable [ Name=tokensDBLP ]
              Variable [ Name=tokensUnrankedDBLP ]
              Variable [ Name=idDBLP ]
              Variable [ Name=paperDBLP ]
              Variable [ Name=prefixTokenDBLP ]
              Variable [ Name=prefixTokenCSX ]
              Variable [ Name=paperCSX ]

            Orderby
              FunctionCall fuzzyjoin.count@1[
                Variable [ Name=id ]
              ]
              ASC
              Variable [ Name=tokenGroupped ]
              ASC

          )
          AS
          Variable [ Name=tokenRanked ]
          AT
          Variable [ Name=i ]
        ]
        Where
          OperatorExpr [
            Variable [ Name=tokenUnranked ]
            =
            Variable [ Name=tokenRanked ]
          ]
        Orderby
          Variable [ Name=i ]
          ASC

      )
    LetVariable [ Name=sim ]
      :=
      FunctionCall fuzzyjoin.similarity-jaccard-prefix@6[
        FunctionCall fuzzyjoin.len@1[
          Variable [ Name=tokensUnrankedDBLP ]
        ]
        Variable [ Name=tokensDBLP ]
        FunctionCall fuzzyjoin.len@1[
          Variable [ Name=tokensUnrankedCSX ]
        ]
        Variable [ Name=tokensCSX ]
        Variable [ Name=prefixTokenDBLP ]
        LiteralExpr [FLOAT] [0.5]
      ]
    Where
      OperatorExpr [
        OperatorExpr [
          Variable [ Name=prefixTokenDBLP ]
          =
          Variable [ Name=prefixTokenCSX ]
        ]
        and
        OperatorExpr [
          Variable [ Name=sim ]
          >=
          LiteralExpr [FLOAT] [0.5]
        ]
      ]
    Groupby
      Variable [ Name=idDBLP ]
      :=
      Variable [ Name=idDBLP ]
      Variable [ Name=idCSX ]
      :=
      Variable [ Name=idCSX ]
      Variable [ Name=sim ]
      :=
      Variable [ Name=sim ]
      With
      Variable [ Name=sim ]
      Variable [ Name=tokensCSX ]
      Variable [ Name=tokensUnrankedCSX ]
      Variable [ Name=idCSX ]
      Variable [ Name=tokensDBLP ]
      Variable [ Name=tokensUnrankedDBLP ]
      Variable [ Name=idDBLP ]
      Variable [ Name=paperDBLP ]
      Variable [ Name=prefixTokenDBLP ]
      Variable [ Name=prefixTokenCSX ]
      Variable [ Name=paperCSX ]

  )
  AS
  Variable [ Name=ridpair ]
,
  FunctionCall Metadata.dataset@1[
    LiteralExpr [STRING] [DBLP]
  ]
  AS
  Variable [ Name=paperDBLP ]
,
  FunctionCall Metadata.dataset@1[
    LiteralExpr [STRING] [CSX]
  ]
  AS
  Variable [ Name=paperCSX ]
]
Where
  OperatorExpr [
    OperatorExpr [
      FieldAccessor [
        Variable [ Name=ridpair ]
        Field=idDBLP
      ]
      =
      FieldAccessor [
        Variable [ Name=paperDBLP ]
        Field=id
      ]
    ]
    and
    OperatorExpr [
      FieldAccessor [
        Variable [ Name=ridpair ]
        Field=idCSX
      ]
      =
      FieldAccessor [
        Variable [ Name=paperCSX ]
        Field=id
      ]
    ]
  ]
Orderby
  FieldAccessor [
    Variable [ Name=paperDBLP ]
    Field=id
  ]
  ASC
  FieldAccessor [
    Variable [ Name=paperCSX ]
    Field=id
  ]
  ASC

