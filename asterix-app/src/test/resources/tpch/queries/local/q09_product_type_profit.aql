/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
use dataverse tpch;

declare type LineItemType as closed {
  l_orderkey: int32, 
  l_partkey: int32, 
  l_suppkey: int32, 
  l_linenumber: int32, 
  l_quantity: double, 
  l_extendedprice: double,
  l_discount: double, 
  l_tax: double,
  l_returnflag: string, 
  l_linestatus: string, 
  l_shipdate: string,
  l_commitdate: string, 
  l_receiptdate: string, 
  l_shipinstruct: string, 
  l_shipmode: string, 
  l_comment: string
}

declare type OrderType as closed {
  o_orderkey: int32, 
  o_custkey: int32, 
  o_orderstatus: string, 
  o_totalprice: double, 
  o_orderdate: string, 
  o_orderpriority: string,
  o_clerk: string, 
  o_shippriority: int32, 
  o_comment: string
}


declare type SupplierType as closed {
  s_suppkey: int32, 
  s_name: string,
  s_address: string,
  s_nationkey: int32,
  s_phone: string,
  s_acctbal: double,
  s_comment: string
}

declare type NationType as closed {
  n_nationkey: int32,
  n_name: string,
  n_regionkey: int32,
  n_comment: string
}

declare type PartType as closed {
  p_partkey: int32, 
  p_name: string, 
  p_mfgr: string,
  p_brand: string,
  p_type: string,
  p_size: int32,
  p_container: string,
  p_retailprice: double,
  p_comment: string
}

declare type PartSuppType as closed {
  ps_partkey: int32, 
  ps_suppkey: int32,
  ps_availqty: int32,
  ps_supplycost: double,
  ps_comment: string 
}

declare nodegroup group1 on asterix_nc1, asterix_nc2;

declare dataset LineItems(LineItemType)
  primary key l_orderkey, l_linenumber on group1;
declare dataset Orders(OrderType)
  primary key o_orderkey on group1;
declare dataset Suppliers(SupplierType)
  primary key s_suppkey on group1;
declare dataset Nations(NationType) 
  primary key n_nationkey on group1;
declare dataset Parts(PartType)
  primary key p_partkey on group1;
declare dataset PartSupp(PartSuppType)
  primary key ps_partkey, ps_suppkey on group1;  
  
write output to asterix_nc1:"/tmp/q9_product_type_profit.adm";

                
for $profit in 
(  for $o in dataset('Orders')
   for $l3 in 
   (  for $p in dataset('Parts')
      for $l2 in 
      (  for $ps in dataset('PartSupp')
         for $l1 in 
        (  for $s1 in
            (  for $s in dataset('Suppliers')
               for $n in dataset('Nations')
               where $n.n_nationkey = $s.s_nationkey
               return 
                 { "s_suppkey": $s.s_suppkey, "n_name": $n.n_name}  )
            for $l in dataset('LineItems')
            where $s1.s_suppkey = $l.l_suppkey       
            return 
              { "l_suppkey": $l.l_suppkey, "l_extendedprice": $l.l_extendedprice, "l_discount": $l.l_discount,
                "l_quantity": $l.l_quantity, "l_partkey": $l.l_partkey, "l_orderkey": $l.l_orderkey, "n_name": $s1.n_name } )
         where $ps.ps_suppkey = $l1.l_suppkey and $ps.ps_partkey = $l1.l_partkey       
         return 
           { "l_extendedprice": $l1.l_extendedprice, "l_discount": $l1.l_discount, "l_quantity": $l1.l_quantity, 
             "l_partkey": $l1.l_partkey, "l_orderkey": $l1.l_orderkey, "n_name": $l1.n_name, "ps_supplycost": $ps.ps_supplycost }  )
      where contains($p.p_name, 'green') and $p.p_partkey = $l2.l_partkey    
      return 
        { "l_extendedprice": $l2.l_extendedprice, "l_discount": $l2.l_discount, "l_quantity": $l2.l_quantity, 
          "l_orderkey": $l2.l_orderkey, "n_name": $l2.n_name, "ps_supplycost": $l2.ps_supplycost  }  )
   where $o.o_orderkey = $l3.l_orderkey
   let $amount := $l3.l_extendedprice * (1 - $l3.l_discount) -  $l3.ps_supplycost * $l3.l_quantity 
   let $o_year := year($o.o_orderdate)
   return 
     { "nation": $l3.n_name, "o_year": $o_year, "amount": $amount }  )
 group by $nation := $profit.nation, $o_year := $profit.o_year with $profit
 order by $nation, $o_year desc
 return 
   { "nation": $nation, 
     "o_year": $o_year, 
      "sum_profit": sum( for $pr in $profit return $pr.amount )  }    
   
