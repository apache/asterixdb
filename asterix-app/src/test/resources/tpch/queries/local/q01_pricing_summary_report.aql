/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
use dataverse tpch;

declare type LineItemType as closed {
  l_orderkey: int32, 
  l_partkey: int32, 
  l_suppkey: int32, 
  l_linenumber: int32, 
  l_quantity: double, 
  l_extendedprice: double,
  l_discount: double, 
  l_tax: double,
  l_returnflag: string, 
  l_linestatus: string, 
  l_shipdate: string,
  l_commitdate: string, 
  l_receiptdate: string, 
  l_shipinstruct: string, 
  l_shipmode: string, 
  l_comment: string
}

declare nodegroup group1 on asterix_nc1, asterix_nc2;

declare dataset LineItems(LineItemType)
  primary key l_orderkey, l_linenumber on group1;

// for external datasets, use:
//
// declare dataset LineItems(LineItemType)
//   splits asterix_nc1:"/opt/tmp/tpch0.001/lineitem.tbl" delimited by "|";


write output to asterix_nc1:"/tmp/q1_pricing_summary_report.adm";
 
for $l in dataset('LineItems')
where $l.l_shipdate <= '1998-09-02'
group by $l_returnflag := $l.l_returnflag, $l_linestatus := $l.l_linestatus  
  with $l
order by $l_returnflag, $l_linestatus
return {
  "l_returnflag": $l_returnflag,
  "l_linestatus": $l_linestatus,
  "sum_qty": sum(for $i in $l return $i.l_quantity),
  "sum_base_price": sum(for $i in $l return $i.l_extendedprice),
  "sum_disc_price": sum(for $i in $l return $i.l_extendedprice * (1 - $i.l_discount)),
  "sum_charge": sum(for $i in $l return $i.l_extendedprice * (1 - $i.l_discount) * (1 + $i.l_tax)),
  "ave_qty": avg(for $i in $l return $i.l_quantity),  
  "ave_price": avg(for $i in $l return $i.l_extendedprice),
  "ave_disc": avg(for $i in $l return $i.l_discount),
  "count_order": count($l)
}   
